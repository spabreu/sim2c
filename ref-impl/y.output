

Terminals which are not used:

   CLASS
   IDENTICAL


Conflict in state 43 between rule 62 and token AND resolved as reduce.
Conflict in state 43 between rule 62 and token OR resolved as reduce.
Conflict in state 43 between rule 62 and token LT resolved as shift.
Conflict in state 43 between rule 62 and token LE resolved as shift.
Conflict in state 43 between rule 62 and token EQ resolved as shift.
Conflict in state 43 between rule 62 and token NE resolved as shift.
Conflict in state 43 between rule 62 and token GE resolved as shift.
Conflict in state 43 between rule 62 and token GT resolved as shift.
Conflict in state 43 between rule 62 and token '+' resolved as shift.
Conflict in state 43 between rule 62 and token '-' resolved as shift.
Conflict in state 43 between rule 62 and token '*' resolved as shift.
Conflict in state 43 between rule 62 and token '/' resolved as shift.
Conflict in state 43 between rule 62 and token '%' resolved as shift.
Conflict in state 43 between rule 62 and token '(' resolved as shift.
Conflict in state 43 between rule 62 and token '[' resolved as shift.
Conflict in state 43 between rule 62 and token '.' resolved as shift.
Conflict in state 44 between rule 74 and token AND resolved as reduce.
Conflict in state 44 between rule 74 and token OR resolved as reduce.
Conflict in state 44 between rule 74 and token LT resolved as reduce.
Conflict in state 44 between rule 74 and token LE resolved as reduce.
Conflict in state 44 between rule 74 and token EQ resolved as reduce.
Conflict in state 44 between rule 74 and token NE resolved as reduce.
Conflict in state 44 between rule 74 and token GE resolved as reduce.
Conflict in state 44 between rule 74 and token GT resolved as reduce.
Conflict in state 44 between rule 74 and token '+' resolved as reduce.
Conflict in state 44 between rule 74 and token '-' resolved as reduce.
Conflict in state 44 between rule 74 and token '*' resolved as reduce.
Conflict in state 44 between rule 74 and token '/' resolved as reduce.
Conflict in state 44 between rule 74 and token '%' resolved as reduce.
Conflict in state 44 between rule 74 and token '(' resolved as shift.
Conflict in state 44 between rule 74 and token '[' resolved as shift.
Conflict in state 44 between rule 74 and token '.' resolved as shift.
Conflict in state 79 between rule 61 and token AND resolved as reduce.
Conflict in state 79 between rule 61 and token OR resolved as reduce.
Conflict in state 79 between rule 61 and token LT resolved as shift.
Conflict in state 79 between rule 61 and token LE resolved as shift.
Conflict in state 79 between rule 61 and token EQ resolved as shift.
Conflict in state 79 between rule 61 and token NE resolved as shift.
Conflict in state 79 between rule 61 and token GE resolved as shift.
Conflict in state 79 between rule 61 and token GT resolved as shift.
Conflict in state 79 between rule 61 and token '+' resolved as shift.
Conflict in state 79 between rule 61 and token '-' resolved as shift.
Conflict in state 79 between rule 61 and token '*' resolved as shift.
Conflict in state 79 between rule 61 and token '/' resolved as shift.
Conflict in state 79 between rule 61 and token '%' resolved as shift.
Conflict in state 79 between rule 61 and token '(' resolved as shift.
Conflict in state 79 between rule 61 and token '[' resolved as shift.
Conflict in state 79 between rule 61 and token '.' resolved as shift.
Conflict in state 80 between rule 60 and token AND resolved as shift.
Conflict in state 80 between rule 60 and token OR resolved as reduce.
Conflict in state 80 between rule 60 and token LT resolved as shift.
Conflict in state 80 between rule 60 and token LE resolved as shift.
Conflict in state 80 between rule 60 and token EQ resolved as shift.
Conflict in state 80 between rule 60 and token NE resolved as shift.
Conflict in state 80 between rule 60 and token GE resolved as shift.
Conflict in state 80 between rule 60 and token GT resolved as shift.
Conflict in state 80 between rule 60 and token '+' resolved as shift.
Conflict in state 80 between rule 60 and token '-' resolved as shift.
Conflict in state 80 between rule 60 and token '*' resolved as shift.
Conflict in state 80 between rule 60 and token '/' resolved as shift.
Conflict in state 80 between rule 60 and token '%' resolved as shift.
Conflict in state 80 between rule 60 and token '(' resolved as shift.
Conflict in state 80 between rule 60 and token '[' resolved as shift.
Conflict in state 80 between rule 60 and token '.' resolved as shift.
Conflict in state 81 between rule 63 and token AND resolved as reduce.
Conflict in state 81 between rule 63 and token OR resolved as reduce.
Conflict in state 81 between rule 63 and token LT resolved as an error.
Conflict in state 81 between rule 63 and token LE resolved as an error.
Conflict in state 81 between rule 63 and token EQ resolved as an error.
Conflict in state 81 between rule 63 and token NE resolved as an error.
Conflict in state 81 between rule 63 and token GE resolved as an error.
Conflict in state 81 between rule 63 and token GT resolved as an error.
Conflict in state 81 between rule 63 and token '+' resolved as shift.
Conflict in state 81 between rule 63 and token '-' resolved as shift.
Conflict in state 81 between rule 63 and token '*' resolved as shift.
Conflict in state 81 between rule 63 and token '/' resolved as shift.
Conflict in state 81 between rule 63 and token '%' resolved as shift.
Conflict in state 81 between rule 63 and token '(' resolved as shift.
Conflict in state 81 between rule 63 and token '[' resolved as shift.
Conflict in state 81 between rule 63 and token '.' resolved as shift.
Conflict in state 82 between rule 64 and token AND resolved as reduce.
Conflict in state 82 between rule 64 and token OR resolved as reduce.
Conflict in state 82 between rule 64 and token LT resolved as an error.
Conflict in state 82 between rule 64 and token LE resolved as an error.
Conflict in state 82 between rule 64 and token EQ resolved as an error.
Conflict in state 82 between rule 64 and token NE resolved as an error.
Conflict in state 82 between rule 64 and token GE resolved as an error.
Conflict in state 82 between rule 64 and token GT resolved as an error.
Conflict in state 82 between rule 64 and token '+' resolved as shift.
Conflict in state 82 between rule 64 and token '-' resolved as shift.
Conflict in state 82 between rule 64 and token '*' resolved as shift.
Conflict in state 82 between rule 64 and token '/' resolved as shift.
Conflict in state 82 between rule 64 and token '%' resolved as shift.
Conflict in state 82 between rule 64 and token '(' resolved as shift.
Conflict in state 82 between rule 64 and token '[' resolved as shift.
Conflict in state 82 between rule 64 and token '.' resolved as shift.
Conflict in state 83 between rule 65 and token AND resolved as reduce.
Conflict in state 83 between rule 65 and token OR resolved as reduce.
Conflict in state 83 between rule 65 and token LT resolved as an error.
Conflict in state 83 between rule 65 and token LE resolved as an error.
Conflict in state 83 between rule 65 and token EQ resolved as an error.
Conflict in state 83 between rule 65 and token NE resolved as an error.
Conflict in state 83 between rule 65 and token GE resolved as an error.
Conflict in state 83 between rule 65 and token GT resolved as an error.
Conflict in state 83 between rule 65 and token '+' resolved as shift.
Conflict in state 83 between rule 65 and token '-' resolved as shift.
Conflict in state 83 between rule 65 and token '*' resolved as shift.
Conflict in state 83 between rule 65 and token '/' resolved as shift.
Conflict in state 83 between rule 65 and token '%' resolved as shift.
Conflict in state 83 between rule 65 and token '(' resolved as shift.
Conflict in state 83 between rule 65 and token '[' resolved as shift.
Conflict in state 83 between rule 65 and token '.' resolved as shift.
Conflict in state 84 between rule 66 and token AND resolved as reduce.
Conflict in state 84 between rule 66 and token OR resolved as reduce.
Conflict in state 84 between rule 66 and token LT resolved as an error.
Conflict in state 84 between rule 66 and token LE resolved as an error.
Conflict in state 84 between rule 66 and token EQ resolved as an error.
Conflict in state 84 between rule 66 and token NE resolved as an error.
Conflict in state 84 between rule 66 and token GE resolved as an error.
Conflict in state 84 between rule 66 and token GT resolved as an error.
Conflict in state 84 between rule 66 and token '+' resolved as shift.
Conflict in state 84 between rule 66 and token '-' resolved as shift.
Conflict in state 84 between rule 66 and token '*' resolved as shift.
Conflict in state 84 between rule 66 and token '/' resolved as shift.
Conflict in state 84 between rule 66 and token '%' resolved as shift.
Conflict in state 84 between rule 66 and token '(' resolved as shift.
Conflict in state 84 between rule 66 and token '[' resolved as shift.
Conflict in state 84 between rule 66 and token '.' resolved as shift.
Conflict in state 85 between rule 67 and token AND resolved as reduce.
Conflict in state 85 between rule 67 and token OR resolved as reduce.
Conflict in state 85 between rule 67 and token LT resolved as an error.
Conflict in state 85 between rule 67 and token LE resolved as an error.
Conflict in state 85 between rule 67 and token EQ resolved as an error.
Conflict in state 85 between rule 67 and token NE resolved as an error.
Conflict in state 85 between rule 67 and token GE resolved as an error.
Conflict in state 85 between rule 67 and token GT resolved as an error.
Conflict in state 85 between rule 67 and token '+' resolved as shift.
Conflict in state 85 between rule 67 and token '-' resolved as shift.
Conflict in state 85 between rule 67 and token '*' resolved as shift.
Conflict in state 85 between rule 67 and token '/' resolved as shift.
Conflict in state 85 between rule 67 and token '%' resolved as shift.
Conflict in state 85 between rule 67 and token '(' resolved as shift.
Conflict in state 85 between rule 67 and token '[' resolved as shift.
Conflict in state 85 between rule 67 and token '.' resolved as shift.
Conflict in state 86 between rule 68 and token AND resolved as reduce.
Conflict in state 86 between rule 68 and token OR resolved as reduce.
Conflict in state 86 between rule 68 and token LT resolved as an error.
Conflict in state 86 between rule 68 and token LE resolved as an error.
Conflict in state 86 between rule 68 and token EQ resolved as an error.
Conflict in state 86 between rule 68 and token NE resolved as an error.
Conflict in state 86 between rule 68 and token GE resolved as an error.
Conflict in state 86 between rule 68 and token GT resolved as an error.
Conflict in state 86 between rule 68 and token '+' resolved as shift.
Conflict in state 86 between rule 68 and token '-' resolved as shift.
Conflict in state 86 between rule 68 and token '*' resolved as shift.
Conflict in state 86 between rule 68 and token '/' resolved as shift.
Conflict in state 86 between rule 68 and token '%' resolved as shift.
Conflict in state 86 between rule 68 and token '(' resolved as shift.
Conflict in state 86 between rule 68 and token '[' resolved as shift.
Conflict in state 86 between rule 68 and token '.' resolved as shift.
Conflict in state 89 between rule 69 and token AND resolved as reduce.
Conflict in state 89 between rule 69 and token OR resolved as reduce.
Conflict in state 89 between rule 69 and token LT resolved as reduce.
Conflict in state 89 between rule 69 and token LE resolved as reduce.
Conflict in state 89 between rule 69 and token EQ resolved as reduce.
Conflict in state 89 between rule 69 and token NE resolved as reduce.
Conflict in state 89 between rule 69 and token GE resolved as reduce.
Conflict in state 89 between rule 69 and token GT resolved as reduce.
Conflict in state 89 between rule 69 and token '+' resolved as reduce.
Conflict in state 89 between rule 69 and token '-' resolved as reduce.
Conflict in state 89 between rule 69 and token '*' resolved as shift.
Conflict in state 89 between rule 69 and token '/' resolved as shift.
Conflict in state 89 between rule 69 and token '%' resolved as shift.
Conflict in state 89 between rule 69 and token '(' resolved as shift.
Conflict in state 89 between rule 69 and token '[' resolved as shift.
Conflict in state 89 between rule 69 and token '.' resolved as shift.
Conflict in state 90 between rule 70 and token AND resolved as reduce.
Conflict in state 90 between rule 70 and token OR resolved as reduce.
Conflict in state 90 between rule 70 and token LT resolved as reduce.
Conflict in state 90 between rule 70 and token LE resolved as reduce.
Conflict in state 90 between rule 70 and token EQ resolved as reduce.
Conflict in state 90 between rule 70 and token NE resolved as reduce.
Conflict in state 90 between rule 70 and token GE resolved as reduce.
Conflict in state 90 between rule 70 and token GT resolved as reduce.
Conflict in state 90 between rule 70 and token '+' resolved as reduce.
Conflict in state 90 between rule 70 and token '-' resolved as reduce.
Conflict in state 90 between rule 70 and token '*' resolved as shift.
Conflict in state 90 between rule 70 and token '/' resolved as shift.
Conflict in state 90 between rule 70 and token '%' resolved as shift.
Conflict in state 90 between rule 70 and token '(' resolved as shift.
Conflict in state 90 between rule 70 and token '[' resolved as shift.
Conflict in state 90 between rule 70 and token '.' resolved as shift.
Conflict in state 91 between rule 71 and token AND resolved as reduce.
Conflict in state 91 between rule 71 and token OR resolved as reduce.
Conflict in state 91 between rule 71 and token LT resolved as reduce.
Conflict in state 91 between rule 71 and token LE resolved as reduce.
Conflict in state 91 between rule 71 and token EQ resolved as reduce.
Conflict in state 91 between rule 71 and token NE resolved as reduce.
Conflict in state 91 between rule 71 and token GE resolved as reduce.
Conflict in state 91 between rule 71 and token GT resolved as reduce.
Conflict in state 91 between rule 71 and token '+' resolved as reduce.
Conflict in state 91 between rule 71 and token '-' resolved as reduce.
Conflict in state 91 between rule 71 and token '*' resolved as reduce.
Conflict in state 91 between rule 71 and token '/' resolved as reduce.
Conflict in state 91 between rule 71 and token '%' resolved as reduce.
Conflict in state 91 between rule 71 and token '(' resolved as shift.
Conflict in state 91 between rule 71 and token '[' resolved as shift.
Conflict in state 91 between rule 71 and token '.' resolved as shift.
Conflict in state 92 between rule 72 and token AND resolved as reduce.
Conflict in state 92 between rule 72 and token OR resolved as reduce.
Conflict in state 92 between rule 72 and token LT resolved as reduce.
Conflict in state 92 between rule 72 and token LE resolved as reduce.
Conflict in state 92 between rule 72 and token EQ resolved as reduce.
Conflict in state 92 between rule 72 and token NE resolved as reduce.
Conflict in state 92 between rule 72 and token GE resolved as reduce.
Conflict in state 92 between rule 72 and token GT resolved as reduce.
Conflict in state 92 between rule 72 and token '+' resolved as reduce.
Conflict in state 92 between rule 72 and token '-' resolved as reduce.
Conflict in state 92 between rule 72 and token '*' resolved as reduce.
Conflict in state 92 between rule 72 and token '/' resolved as reduce.
Conflict in state 92 between rule 72 and token '%' resolved as reduce.
Conflict in state 92 between rule 72 and token '(' resolved as shift.
Conflict in state 92 between rule 72 and token '[' resolved as shift.
Conflict in state 92 between rule 72 and token '.' resolved as shift.
Conflict in state 93 between rule 73 and token AND resolved as reduce.
Conflict in state 93 between rule 73 and token OR resolved as reduce.
Conflict in state 93 between rule 73 and token LT resolved as reduce.
Conflict in state 93 between rule 73 and token LE resolved as reduce.
Conflict in state 93 between rule 73 and token EQ resolved as reduce.
Conflict in state 93 between rule 73 and token NE resolved as reduce.
Conflict in state 93 between rule 73 and token GE resolved as reduce.
Conflict in state 93 between rule 73 and token GT resolved as reduce.
Conflict in state 93 between rule 73 and token '+' resolved as reduce.
Conflict in state 93 between rule 73 and token '-' resolved as reduce.
Conflict in state 93 between rule 73 and token '*' resolved as reduce.
Conflict in state 93 between rule 73 and token '/' resolved as reduce.
Conflict in state 93 between rule 73 and token '%' resolved as reduce.
Conflict in state 93 between rule 73 and token '(' resolved as shift.
Conflict in state 93 between rule 73 and token '[' resolved as shift.
Conflict in state 93 between rule 73 and token '.' resolved as shift.
Conflict in state 201 between rule 95 and token '[' resolved as reduce.
Conflict in state 201 between rule 95 and token '.' resolved as reduce.
State 142 contains 1 shift/reduce conflict.

Grammar
rule 1    @1 ->		/* empty */
rule 2    program -> @1 globals
rule 3    decl -> ids ':' type
rule 4    decl -> ID ':' type
rule 5    decl -> ID ':' type ASSIGN exp
rule 6    decl -> ID ':' type EQ exp
rule 7    decl -> ID EQ exp
rule 8    formals ->		/* empty */
rule 9    formals -> formal
rule 10   formals -> formal ';' formal_list
rule 11   formal_list -> formal
rule 12   formal_list -> formal ';' formal_list
rule 13   formal_list -> error
rule 14   formal -> ids
rule 15   formal -> ID
rule 16   formal -> ids ':' type
rule 17   formal -> ID ':' type
rule 18   fields -> field
rule 19   fields -> field ';' field_list
rule 20   field_list -> field
rule 21   field_list -> field ';' field_list
rule 22   field_list -> error
rule 23   field -> ids ':' type
rule 24   field -> ID ':' type
rule 25   globals ->		/* empty */
rule 26   globals -> global
rule 27   globals -> global ';' global_list
rule 28   global_list -> global
rule 29   global_list -> global ';' global_list
rule 30   global_list -> error
rule 31   global -> ids ':' type
rule 32   global -> ID ':' type
rule 33   global -> ID ':' type ASSIGN exp
rule 34   global -> ID ASSIGN exp
rule 35   global -> ID ':' global_type EQ global_exp
rule 36   global -> ID EQ global_exp
rule 37   ids -> ID ',' ids_aux
rule 38   ids_aux -> ID
rule 39   ids_aux -> ID ',' ids_aux
rule 40   types ->		/* empty */
rule 41   types -> type
rule 42   types -> type ',' type_list
rule 43   type_list -> type
rule 44   type_list -> type ',' type_list
rule 45   type -> '(' types ')'
rule 46   type -> INT
rule 47   type -> REAL
rule 48   type -> BOOL
rule 49   type -> STRING
rule 50   type -> '[' exp ']' type
rule 51   type -> '{' fields '}'
rule 52   type -> error
rule 53   global_type -> type
rule 54   global_type -> type RETURNS type
rule 55   exp -> sexp
rule 56   exp -> sexp ',' exp_list
rule 57   exp_list -> sexp
rule 58   exp_list -> sexp ',' exp_list
rule 59   sexp -> '(' exp ')'
rule 60   sexp -> sexp OR sexp
rule 61   sexp -> sexp AND sexp
rule 62   sexp -> NOT sexp
rule 63   sexp -> sexp LT sexp
rule 64   sexp -> sexp LE sexp
rule 65   sexp -> sexp EQ sexp
rule 66   sexp -> sexp NE sexp
rule 67   sexp -> sexp GE sexp
rule 68   sexp -> sexp GT sexp
rule 69   sexp -> sexp '+' sexp
rule 70   sexp -> sexp '-' sexp
rule 71   sexp -> sexp '*' sexp
rule 72   sexp -> sexp '/' sexp
rule 73   sexp -> sexp '%' sexp
rule 74   sexp -> '-' sexp
rule 75   sexp -> sexp '.' ID
rule 76   sexp -> sexp '[' exp ']'
rule 77   sexp -> sexp '(' exp ')'
rule 78   sexp -> sexp '(' ')'
rule 79   sexp -> RECURSE '(' exp ')'
rule 80   sexp -> RECURSE '(' ')'
rule 81   sexp -> ID
rule 82   sexp -> INT_LIT
rule 83   sexp -> REAL_LIT
rule 84   sexp -> BOOL_LIT
rule 85   sexp -> STRING_LIT
rule 86   global_exp -> sexp
rule 87   global_exp -> MAP '(' formals ')' '[' stats ']'
rule 88   global_exp -> MAP '(' formals ')' RETURNS type '[' stats ']'
rule 89   primary -> prim
rule 90   primary -> prim ',' prim_list
rule 91   prim_list -> prim
rule 92   prim_list -> prim ',' prim_list
rule 93   prim -> '(' primary ')'
rule 94   prim -> ID
rule 95   prim -> prim '.' prim
rule 96   prim -> prim '[' exp ']'
rule 97   stats ->		/* empty */
rule 98   stats -> stat_list
rule 99   stat_list -> stat
rule 100  stat_list -> stat ';'
rule 101  stat_list -> stat ';' stat_list
rule 102  stat_list -> error
rule 103  stat -> decl
rule 104  stat -> action
rule 105  stat -> RETURN exp
rule 106  stat -> BREAK
rule 107  stat -> SKIP
rule 108  stat -> RETRY
rule 109  stat -> BREAK INT_LIT
rule 110  stat -> SKIP INT_LIT
rule 111  stat -> RETRY INT_LIT
rule 112  @2 ->		/* empty */
rule 113  stat -> COND @2 '[' clauses ']'
rule 114  @3 ->		/* empty */
rule 115  stat -> WHILE @3 '[' clauses ']'
rule 116  stat -> '[' stats ']'
rule 117  clauses -> exp RETURNS stats
rule 118  clauses -> exp RETURNS stats '|' clauses
rule 119  clauses -> exp RETURNS stats '|' ELSE RETURNS stats
rule 120  clauses -> error ']'
rule 121  action -> primary ASSIGN exp
rule 122  action -> primary '(' ')'
rule 123  action -> primary '(' exp ')'
rule 124  action -> RECURSE '(' ')'
rule 125  action -> RECURSE '(' exp ')'

Terminals, with rules where they appear

$ (-1)
'%' (37) 73
'(' (40) 45 59 77 78 79 80 87 88 93 122 123 124 125
')' (41) 45 59 77 78 79 80 87 88 93 122 123 124 125
'*' (42) 71
'+' (43) 69
',' (44) 37 39 42 44 56 58 90 92
'-' (45) 70 74
'.' (46) 75 95
'/' (47) 72
':' (58) 3 4 5 6 16 17 23 24 31 32 33 35
';' (59) 10 12 19 21 27 29 100 101
'[' (91) 50 76 87 88 96 113 115 116
']' (93) 50 76 87 88 96 113 115 116 120
'{' (123) 51
'|' (124) 118 119
'}' (125) 51
error (256) 13 22 30 52 102 120
ID (258) 4 5 6 7 15 17 24 32 33 34 35 36 37 38 39 75 81 94
INT (259) 46
REAL (260) 47
BOOL (261) 48
STRING (262) 49
MAP (263) 87 88
CLASS (264)
INT_LIT (265) 82 109 110 111
REAL_LIT (266) 83
BOOL_LIT (267) 84
STRING_LIT (268) 85
RETURN (269) 105
RECURSE (270) 79 80 124 125
BREAK (271) 106 109
SKIP (272) 107 110
RETRY (273) 108 111
ELSE (274) 119
COND (275) 113
WHILE (276) 115
IDENTICAL (277)
ASSIGN (278) 5 33 34 121
RETURNS (279) 54 88 117 118 119
AND (280) 61
OR (281) 60
NOT (282) 62
LT (283) 63
LE (284) 64
EQ (285) 6 7 35 36 65
NE (286) 66
GE (287) 67
GT (288) 68
UMINUS (289)

Nonterminals, with rules where they appear

program (51)
    on left: 2
@1 (52)
    on left: 1, on right: 2
decl (53)
    on left: 3 4 5 6 7, on right: 103
formals (54)
    on left: 8 9 10, on right: 87 88
formal_list (55)
    on left: 11 12 13, on right: 10 12
formal (56)
    on left: 14 15 16 17, on right: 9 10 11 12
fields (57)
    on left: 18 19, on right: 51
field_list (58)
    on left: 20 21 22, on right: 19 21
field (59)
    on left: 23 24, on right: 18 19 20 21
globals (60)
    on left: 25 26 27, on right: 2
global_list (61)
    on left: 28 29 30, on right: 27 29
global (62)
    on left: 31 32 33 34 35 36, on right: 26 27 28 29
ids (63)
    on left: 37, on right: 3 14 16 23 31
ids_aux (64)
    on left: 38 39, on right: 37 39
types (65)
    on left: 40 41 42, on right: 45
type_list (66)
    on left: 43 44, on right: 42 44
type (67)
    on left: 45 46 47 48 49 50 51 52, on right: 3 4 5 6 16 17 23 24
    31 32 33 41 42 43 44 50 53 54 88
global_type (68)
    on left: 53 54, on right: 35
exp (69)
    on left: 55 56, on right: 5 6 7 33 34 50 59 76 77 79 96 105 117
    118 119 121 123 125
exp_list (70)
    on left: 57 58, on right: 56 58
sexp (71)
    on left: 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76
    77 78 79 80 81 82 83 84 85, on right: 55 56 57 58 60 61 62 63 64
    65 66 67 68 69 70 71 72 73 74 75 76 77 78 86
global_exp (72)
    on left: 86 87 88, on right: 35 36
primary (73)
    on left: 89 90, on right: 93 121 122 123
prim_list (74)
    on left: 91 92, on right: 90 92
prim (75)
    on left: 93 94 95 96, on right: 89 90 91 92 95 96
stats (76)
    on left: 97 98, on right: 87 88 116 117 118 119
stat_list (77)
    on left: 99 100 101 102, on right: 98 101
stat (78)
    on left: 103 104 105 106 107 108 109 110 111 113 115 116,
    on right: 99 100 101
@2 (79)
    on left: 112, on right: 113
@3 (80)
    on left: 114, on right: 115
clauses (81)
    on left: 117 118 119 120, on right: 113 115 118
action (82)
    on left: 121 122 123 124 125, on right: 104


state 0

    $default	reduce using rule 1 (@1)

    program	go to state 227
    @1  	go to state 1



state 1

    program  ->  @1 . globals   (rule 2)

    ID  	shift, and go to state 2

    $default	reduce using rule 25 (globals)

    globals	go to state 3
    global	go to state 4
    ids 	go to state 5



state 2

    global  ->  ID . ':' type   (rule 32)
    global  ->  ID . ':' type ASSIGN exp   (rule 33)
    global  ->  ID . ASSIGN exp   (rule 34)
    global  ->  ID . ':' global_type EQ global_exp   (rule 35)
    global  ->  ID . EQ global_exp   (rule 36)
    ids  ->  ID . ',' ids_aux   (rule 37)

    ASSIGN	shift, and go to state 6
    EQ  	shift, and go to state 7
    ':' 	shift, and go to state 8
    ',' 	shift, and go to state 9



state 3

    program  ->  @1 globals .   (rule 2)

    $default	reduce using rule 2 (program)



state 4

    globals  ->  global .   (rule 26)
    globals  ->  global . ';' global_list   (rule 27)

    ';' 	shift, and go to state 10

    $default	reduce using rule 26 (globals)



state 5

    global  ->  ids . ':' type   (rule 31)

    ':' 	shift, and go to state 11



state 6

    global  ->  ID ASSIGN . exp   (rule 34)

    ID  	shift, and go to state 12
    INT_LIT	shift, and go to state 13
    REAL_LIT	shift, and go to state 14
    BOOL_LIT	shift, and go to state 15
    STRING_LIT	shift, and go to state 16
    RECURSE	shift, and go to state 17
    NOT 	shift, and go to state 18
    '-' 	shift, and go to state 19
    '(' 	shift, and go to state 20

    exp 	go to state 21
    sexp	go to state 22



state 7

    global  ->  ID EQ . global_exp   (rule 36)

    ID  	shift, and go to state 12
    MAP 	shift, and go to state 23
    INT_LIT	shift, and go to state 13
    REAL_LIT	shift, and go to state 14
    BOOL_LIT	shift, and go to state 15
    STRING_LIT	shift, and go to state 16
    RECURSE	shift, and go to state 17
    NOT 	shift, and go to state 18
    '-' 	shift, and go to state 19
    '(' 	shift, and go to state 20

    sexp	go to state 24
    global_exp	go to state 25



state 8

    global  ->  ID ':' . type   (rule 32)
    global  ->  ID ':' . type ASSIGN exp   (rule 33)
    global  ->  ID ':' . global_type EQ global_exp   (rule 35)

    error	shift, and go to state 26
    INT 	shift, and go to state 27
    REAL	shift, and go to state 28
    BOOL	shift, and go to state 29
    STRING	shift, and go to state 30
    '(' 	shift, and go to state 31
    '[' 	shift, and go to state 32
    '{' 	shift, and go to state 33

    type	go to state 34
    global_type	go to state 35



state 9

    ids  ->  ID ',' . ids_aux   (rule 37)

    ID  	shift, and go to state 36

    ids_aux	go to state 37



state 10

    globals  ->  global ';' . global_list   (rule 27)

    error	shift, and go to state 38
    ID  	shift, and go to state 2

    global_list	go to state 39
    global	go to state 40
    ids 	go to state 5



state 11

    global  ->  ids ':' . type   (rule 31)

    error	shift, and go to state 26
    INT 	shift, and go to state 27
    REAL	shift, and go to state 28
    BOOL	shift, and go to state 29
    STRING	shift, and go to state 30
    '(' 	shift, and go to state 31
    '[' 	shift, and go to state 32
    '{' 	shift, and go to state 33

    type	go to state 41



state 12

    sexp  ->  ID .   (rule 81)

    $default	reduce using rule 81 (sexp)



state 13

    sexp  ->  INT_LIT .   (rule 82)

    $default	reduce using rule 82 (sexp)



state 14

    sexp  ->  REAL_LIT .   (rule 83)

    $default	reduce using rule 83 (sexp)



state 15

    sexp  ->  BOOL_LIT .   (rule 84)

    $default	reduce using rule 84 (sexp)



state 16

    sexp  ->  STRING_LIT .   (rule 85)

    $default	reduce using rule 85 (sexp)



state 17

    sexp  ->  RECURSE . '(' exp ')'   (rule 79)
    sexp  ->  RECURSE . '(' ')'   (rule 80)

    '(' 	shift, and go to state 42



state 18

    sexp  ->  NOT . sexp   (rule 62)

    ID  	shift, and go to state 12
    INT_LIT	shift, and go to state 13
    REAL_LIT	shift, and go to state 14
    BOOL_LIT	shift, and go to state 15
    STRING_LIT	shift, and go to state 16
    RECURSE	shift, and go to state 17
    NOT 	shift, and go to state 18
    '-' 	shift, and go to state 19
    '(' 	shift, and go to state 20

    sexp	go to state 43



state 19

    sexp  ->  '-' . sexp   (rule 74)

    ID  	shift, and go to state 12
    INT_LIT	shift, and go to state 13
    REAL_LIT	shift, and go to state 14
    BOOL_LIT	shift, and go to state 15
    STRING_LIT	shift, and go to state 16
    RECURSE	shift, and go to state 17
    NOT 	shift, and go to state 18
    '-' 	shift, and go to state 19
    '(' 	shift, and go to state 20

    sexp	go to state 44



state 20

    sexp  ->  '(' . exp ')'   (rule 59)

    ID  	shift, and go to state 12
    INT_LIT	shift, and go to state 13
    REAL_LIT	shift, and go to state 14
    BOOL_LIT	shift, and go to state 15
    STRING_LIT	shift, and go to state 16
    RECURSE	shift, and go to state 17
    NOT 	shift, and go to state 18
    '-' 	shift, and go to state 19
    '(' 	shift, and go to state 20

    exp 	go to state 45
    sexp	go to state 22



state 21

    global  ->  ID ASSIGN exp .   (rule 34)

    $default	reduce using rule 34 (global)



state 22

    exp  ->  sexp .   (rule 55)
    exp  ->  sexp . ',' exp_list   (rule 56)
    sexp  ->  sexp . OR sexp   (rule 60)
    sexp  ->  sexp . AND sexp   (rule 61)
    sexp  ->  sexp . LT sexp   (rule 63)
    sexp  ->  sexp . LE sexp   (rule 64)
    sexp  ->  sexp . EQ sexp   (rule 65)
    sexp  ->  sexp . NE sexp   (rule 66)
    sexp  ->  sexp . GE sexp   (rule 67)
    sexp  ->  sexp . GT sexp   (rule 68)
    sexp  ->  sexp . '+' sexp   (rule 69)
    sexp  ->  sexp . '-' sexp   (rule 70)
    sexp  ->  sexp . '*' sexp   (rule 71)
    sexp  ->  sexp . '/' sexp   (rule 72)
    sexp  ->  sexp . '%' sexp   (rule 73)
    sexp  ->  sexp . '.' ID   (rule 75)
    sexp  ->  sexp . '[' exp ']'   (rule 76)
    sexp  ->  sexp . '(' exp ')'   (rule 77)
    sexp  ->  sexp . '(' ')'   (rule 78)

    AND 	shift, and go to state 46
    OR  	shift, and go to state 47
    LT  	shift, and go to state 48
    LE  	shift, and go to state 49
    EQ  	shift, and go to state 50
    NE  	shift, and go to state 51
    GE  	shift, and go to state 52
    GT  	shift, and go to state 53
    ',' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '*' 	shift, and go to state 57
    '/' 	shift, and go to state 58
    '%' 	shift, and go to state 59
    '(' 	shift, and go to state 60
    '[' 	shift, and go to state 61
    '.' 	shift, and go to state 62

    $default	reduce using rule 55 (exp)



state 23

    global_exp  ->  MAP . '(' formals ')' '[' stats ']'   (rule 87)
    global_exp  ->  MAP . '(' formals ')' RETURNS type '[' stats ']'   (rule 88)

    '(' 	shift, and go to state 63



state 24

    sexp  ->  sexp . OR sexp   (rule 60)
    sexp  ->  sexp . AND sexp   (rule 61)
    sexp  ->  sexp . LT sexp   (rule 63)
    sexp  ->  sexp . LE sexp   (rule 64)
    sexp  ->  sexp . EQ sexp   (rule 65)
    sexp  ->  sexp . NE sexp   (rule 66)
    sexp  ->  sexp . GE sexp   (rule 67)
    sexp  ->  sexp . GT sexp   (rule 68)
    sexp  ->  sexp . '+' sexp   (rule 69)
    sexp  ->  sexp . '-' sexp   (rule 70)
    sexp  ->  sexp . '*' sexp   (rule 71)
    sexp  ->  sexp . '/' sexp   (rule 72)
    sexp  ->  sexp . '%' sexp   (rule 73)
    sexp  ->  sexp . '.' ID   (rule 75)
    sexp  ->  sexp . '[' exp ']'   (rule 76)
    sexp  ->  sexp . '(' exp ')'   (rule 77)
    sexp  ->  sexp . '(' ')'   (rule 78)
    global_exp  ->  sexp .   (rule 86)

    AND 	shift, and go to state 46
    OR  	shift, and go to state 47
    LT  	shift, and go to state 48
    LE  	shift, and go to state 49
    EQ  	shift, and go to state 50
    NE  	shift, and go to state 51
    GE  	shift, and go to state 52
    GT  	shift, and go to state 53
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '*' 	shift, and go to state 57
    '/' 	shift, and go to state 58
    '%' 	shift, and go to state 59
    '(' 	shift, and go to state 60
    '[' 	shift, and go to state 61
    '.' 	shift, and go to state 62

    $default	reduce using rule 86 (global_exp)



state 25

    global  ->  ID EQ global_exp .   (rule 36)

    $default	reduce using rule 36 (global)



state 26

    type  ->  error .   (rule 52)

    $default	reduce using rule 52 (type)



state 27

    type  ->  INT .   (rule 46)

    $default	reduce using rule 46 (type)



state 28

    type  ->  REAL .   (rule 47)

    $default	reduce using rule 47 (type)



state 29

    type  ->  BOOL .   (rule 48)

    $default	reduce using rule 48 (type)



state 30

    type  ->  STRING .   (rule 49)

    $default	reduce using rule 49 (type)



state 31

    type  ->  '(' . types ')'   (rule 45)

    error	shift, and go to state 26
    INT 	shift, and go to state 27
    REAL	shift, and go to state 28
    BOOL	shift, and go to state 29
    STRING	shift, and go to state 30
    '(' 	shift, and go to state 31
    '[' 	shift, and go to state 32
    '{' 	shift, and go to state 33

    ')' 	reduce using rule 40 (types)

    types	go to state 64
    type	go to state 65



state 32

    type  ->  '[' . exp ']' type   (rule 50)

    ID  	shift, and go to state 12
    INT_LIT	shift, and go to state 13
    REAL_LIT	shift, and go to state 14
    BOOL_LIT	shift, and go to state 15
    STRING_LIT	shift, and go to state 16
    RECURSE	shift, and go to state 17
    NOT 	shift, and go to state 18
    '-' 	shift, and go to state 19
    '(' 	shift, and go to state 20

    exp 	go to state 66
    sexp	go to state 22



state 33

    type  ->  '{' . fields '}'   (rule 51)

    ID  	shift, and go to state 67

    fields	go to state 68
    field	go to state 69
    ids 	go to state 70



state 34

    global  ->  ID ':' type .   (rule 32)
    global  ->  ID ':' type . ASSIGN exp   (rule 33)
    global_type  ->  type .   (rule 53)
    global_type  ->  type . RETURNS type   (rule 54)

    ASSIGN	shift, and go to state 71
    RETURNS	shift, and go to state 72

    EQ  	reduce using rule 53 (global_type)
    $default	reduce using rule 32 (global)



state 35

    global  ->  ID ':' global_type . EQ global_exp   (rule 35)

    EQ  	shift, and go to state 73



state 36

    ids_aux  ->  ID .   (rule 38)
    ids_aux  ->  ID . ',' ids_aux   (rule 39)

    ',' 	shift, and go to state 74

    $default	reduce using rule 38 (ids_aux)



state 37

    ids  ->  ID ',' ids_aux .   (rule 37)

    $default	reduce using rule 37 (ids)



state 38

    global_list  ->  error .   (rule 30)

    $default	reduce using rule 30 (global_list)



state 39

    globals  ->  global ';' global_list .   (rule 27)

    $default	reduce using rule 27 (globals)



state 40

    global_list  ->  global .   (rule 28)
    global_list  ->  global . ';' global_list   (rule 29)

    ';' 	shift, and go to state 75

    $default	reduce using rule 28 (global_list)



state 41

    global  ->  ids ':' type .   (rule 31)

    $default	reduce using rule 31 (global)



state 42

    sexp  ->  RECURSE '(' . exp ')'   (rule 79)
    sexp  ->  RECURSE '(' . ')'   (rule 80)

    ID  	shift, and go to state 12
    INT_LIT	shift, and go to state 13
    REAL_LIT	shift, and go to state 14
    BOOL_LIT	shift, and go to state 15
    STRING_LIT	shift, and go to state 16
    RECURSE	shift, and go to state 17
    NOT 	shift, and go to state 18
    '-' 	shift, and go to state 19
    '(' 	shift, and go to state 20
    ')' 	shift, and go to state 76

    exp 	go to state 77
    sexp	go to state 22



state 43

    sexp  ->  sexp . OR sexp   (rule 60)
    sexp  ->  sexp . AND sexp   (rule 61)
    sexp  ->  NOT sexp .   (rule 62)
    sexp  ->  sexp . LT sexp   (rule 63)
    sexp  ->  sexp . LE sexp   (rule 64)
    sexp  ->  sexp . EQ sexp   (rule 65)
    sexp  ->  sexp . NE sexp   (rule 66)
    sexp  ->  sexp . GE sexp   (rule 67)
    sexp  ->  sexp . GT sexp   (rule 68)
    sexp  ->  sexp . '+' sexp   (rule 69)
    sexp  ->  sexp . '-' sexp   (rule 70)
    sexp  ->  sexp . '*' sexp   (rule 71)
    sexp  ->  sexp . '/' sexp   (rule 72)
    sexp  ->  sexp . '%' sexp   (rule 73)
    sexp  ->  sexp . '.' ID   (rule 75)
    sexp  ->  sexp . '[' exp ']'   (rule 76)
    sexp  ->  sexp . '(' exp ')'   (rule 77)
    sexp  ->  sexp . '(' ')'   (rule 78)

    LT  	shift, and go to state 48
    LE  	shift, and go to state 49
    EQ  	shift, and go to state 50
    NE  	shift, and go to state 51
    GE  	shift, and go to state 52
    GT  	shift, and go to state 53
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '*' 	shift, and go to state 57
    '/' 	shift, and go to state 58
    '%' 	shift, and go to state 59
    '(' 	shift, and go to state 60
    '[' 	shift, and go to state 61
    '.' 	shift, and go to state 62

    $default	reduce using rule 62 (sexp)



state 44

    sexp  ->  sexp . OR sexp   (rule 60)
    sexp  ->  sexp . AND sexp   (rule 61)
    sexp  ->  sexp . LT sexp   (rule 63)
    sexp  ->  sexp . LE sexp   (rule 64)
    sexp  ->  sexp . EQ sexp   (rule 65)
    sexp  ->  sexp . NE sexp   (rule 66)
    sexp  ->  sexp . GE sexp   (rule 67)
    sexp  ->  sexp . GT sexp   (rule 68)
    sexp  ->  sexp . '+' sexp   (rule 69)
    sexp  ->  sexp . '-' sexp   (rule 70)
    sexp  ->  sexp . '*' sexp   (rule 71)
    sexp  ->  sexp . '/' sexp   (rule 72)
    sexp  ->  sexp . '%' sexp   (rule 73)
    sexp  ->  '-' sexp .   (rule 74)
    sexp  ->  sexp . '.' ID   (rule 75)
    sexp  ->  sexp . '[' exp ']'   (rule 76)
    sexp  ->  sexp . '(' exp ')'   (rule 77)
    sexp  ->  sexp . '(' ')'   (rule 78)

    '(' 	shift, and go to state 60
    '[' 	shift, and go to state 61
    '.' 	shift, and go to state 62

    $default	reduce using rule 74 (sexp)



state 45

    sexp  ->  '(' exp . ')'   (rule 59)

    ')' 	shift, and go to state 78



state 46

    sexp  ->  sexp AND . sexp   (rule 61)

    ID  	shift, and go to state 12
    INT_LIT	shift, and go to state 13
    REAL_LIT	shift, and go to state 14
    BOOL_LIT	shift, and go to state 15
    STRING_LIT	shift, and go to state 16
    RECURSE	shift, and go to state 17
    NOT 	shift, and go to state 18
    '-' 	shift, and go to state 19
    '(' 	shift, and go to state 20

    sexp	go to state 79



state 47

    sexp  ->  sexp OR . sexp   (rule 60)

    ID  	shift, and go to state 12
    INT_LIT	shift, and go to state 13
    REAL_LIT	shift, and go to state 14
    BOOL_LIT	shift, and go to state 15
    STRING_LIT	shift, and go to state 16
    RECURSE	shift, and go to state 17
    NOT 	shift, and go to state 18
    '-' 	shift, and go to state 19
    '(' 	shift, and go to state 20

    sexp	go to state 80



state 48

    sexp  ->  sexp LT . sexp   (rule 63)

    ID  	shift, and go to state 12
    INT_LIT	shift, and go to state 13
    REAL_LIT	shift, and go to state 14
    BOOL_LIT	shift, and go to state 15
    STRING_LIT	shift, and go to state 16
    RECURSE	shift, and go to state 17
    NOT 	shift, and go to state 18
    '-' 	shift, and go to state 19
    '(' 	shift, and go to state 20

    sexp	go to state 81



state 49

    sexp  ->  sexp LE . sexp   (rule 64)

    ID  	shift, and go to state 12
    INT_LIT	shift, and go to state 13
    REAL_LIT	shift, and go to state 14
    BOOL_LIT	shift, and go to state 15
    STRING_LIT	shift, and go to state 16
    RECURSE	shift, and go to state 17
    NOT 	shift, and go to state 18
    '-' 	shift, and go to state 19
    '(' 	shift, and go to state 20

    sexp	go to state 82



state 50

    sexp  ->  sexp EQ . sexp   (rule 65)

    ID  	shift, and go to state 12
    INT_LIT	shift, and go to state 13
    REAL_LIT	shift, and go to state 14
    BOOL_LIT	shift, and go to state 15
    STRING_LIT	shift, and go to state 16
    RECURSE	shift, and go to state 17
    NOT 	shift, and go to state 18
    '-' 	shift, and go to state 19
    '(' 	shift, and go to state 20

    sexp	go to state 83



state 51

    sexp  ->  sexp NE . sexp   (rule 66)

    ID  	shift, and go to state 12
    INT_LIT	shift, and go to state 13
    REAL_LIT	shift, and go to state 14
    BOOL_LIT	shift, and go to state 15
    STRING_LIT	shift, and go to state 16
    RECURSE	shift, and go to state 17
    NOT 	shift, and go to state 18
    '-' 	shift, and go to state 19
    '(' 	shift, and go to state 20

    sexp	go to state 84



state 52

    sexp  ->  sexp GE . sexp   (rule 67)

    ID  	shift, and go to state 12
    INT_LIT	shift, and go to state 13
    REAL_LIT	shift, and go to state 14
    BOOL_LIT	shift, and go to state 15
    STRING_LIT	shift, and go to state 16
    RECURSE	shift, and go to state 17
    NOT 	shift, and go to state 18
    '-' 	shift, and go to state 19
    '(' 	shift, and go to state 20

    sexp	go to state 85



state 53

    sexp  ->  sexp GT . sexp   (rule 68)

    ID  	shift, and go to state 12
    INT_LIT	shift, and go to state 13
    REAL_LIT	shift, and go to state 14
    BOOL_LIT	shift, and go to state 15
    STRING_LIT	shift, and go to state 16
    RECURSE	shift, and go to state 17
    NOT 	shift, and go to state 18
    '-' 	shift, and go to state 19
    '(' 	shift, and go to state 20

    sexp	go to state 86



state 54

    exp  ->  sexp ',' . exp_list   (rule 56)

    ID  	shift, and go to state 12
    INT_LIT	shift, and go to state 13
    REAL_LIT	shift, and go to state 14
    BOOL_LIT	shift, and go to state 15
    STRING_LIT	shift, and go to state 16
    RECURSE	shift, and go to state 17
    NOT 	shift, and go to state 18
    '-' 	shift, and go to state 19
    '(' 	shift, and go to state 20

    exp_list	go to state 87
    sexp	go to state 88



state 55

    sexp  ->  sexp '+' . sexp   (rule 69)

    ID  	shift, and go to state 12
    INT_LIT	shift, and go to state 13
    REAL_LIT	shift, and go to state 14
    BOOL_LIT	shift, and go to state 15
    STRING_LIT	shift, and go to state 16
    RECURSE	shift, and go to state 17
    NOT 	shift, and go to state 18
    '-' 	shift, and go to state 19
    '(' 	shift, and go to state 20

    sexp	go to state 89



state 56

    sexp  ->  sexp '-' . sexp   (rule 70)

    ID  	shift, and go to state 12
    INT_LIT	shift, and go to state 13
    REAL_LIT	shift, and go to state 14
    BOOL_LIT	shift, and go to state 15
    STRING_LIT	shift, and go to state 16
    RECURSE	shift, and go to state 17
    NOT 	shift, and go to state 18
    '-' 	shift, and go to state 19
    '(' 	shift, and go to state 20

    sexp	go to state 90



state 57

    sexp  ->  sexp '*' . sexp   (rule 71)

    ID  	shift, and go to state 12
    INT_LIT	shift, and go to state 13
    REAL_LIT	shift, and go to state 14
    BOOL_LIT	shift, and go to state 15
    STRING_LIT	shift, and go to state 16
    RECURSE	shift, and go to state 17
    NOT 	shift, and go to state 18
    '-' 	shift, and go to state 19
    '(' 	shift, and go to state 20

    sexp	go to state 91



state 58

    sexp  ->  sexp '/' . sexp   (rule 72)

    ID  	shift, and go to state 12
    INT_LIT	shift, and go to state 13
    REAL_LIT	shift, and go to state 14
    BOOL_LIT	shift, and go to state 15
    STRING_LIT	shift, and go to state 16
    RECURSE	shift, and go to state 17
    NOT 	shift, and go to state 18
    '-' 	shift, and go to state 19
    '(' 	shift, and go to state 20

    sexp	go to state 92



state 59

    sexp  ->  sexp '%' . sexp   (rule 73)

    ID  	shift, and go to state 12
    INT_LIT	shift, and go to state 13
    REAL_LIT	shift, and go to state 14
    BOOL_LIT	shift, and go to state 15
    STRING_LIT	shift, and go to state 16
    RECURSE	shift, and go to state 17
    NOT 	shift, and go to state 18
    '-' 	shift, and go to state 19
    '(' 	shift, and go to state 20

    sexp	go to state 93



state 60

    sexp  ->  sexp '(' . exp ')'   (rule 77)
    sexp  ->  sexp '(' . ')'   (rule 78)

    ID  	shift, and go to state 12
    INT_LIT	shift, and go to state 13
    REAL_LIT	shift, and go to state 14
    BOOL_LIT	shift, and go to state 15
    STRING_LIT	shift, and go to state 16
    RECURSE	shift, and go to state 17
    NOT 	shift, and go to state 18
    '-' 	shift, and go to state 19
    '(' 	shift, and go to state 20
    ')' 	shift, and go to state 94

    exp 	go to state 95
    sexp	go to state 22



state 61

    sexp  ->  sexp '[' . exp ']'   (rule 76)

    ID  	shift, and go to state 12
    INT_LIT	shift, and go to state 13
    REAL_LIT	shift, and go to state 14
    BOOL_LIT	shift, and go to state 15
    STRING_LIT	shift, and go to state 16
    RECURSE	shift, and go to state 17
    NOT 	shift, and go to state 18
    '-' 	shift, and go to state 19
    '(' 	shift, and go to state 20

    exp 	go to state 96
    sexp	go to state 22



state 62

    sexp  ->  sexp '.' . ID   (rule 75)

    ID  	shift, and go to state 97



state 63

    global_exp  ->  MAP '(' . formals ')' '[' stats ']'   (rule 87)
    global_exp  ->  MAP '(' . formals ')' RETURNS type '[' stats ']'   (rule 88)

    ID  	shift, and go to state 98

    $default	reduce using rule 8 (formals)

    formals	go to state 99
    formal	go to state 100
    ids 	go to state 101



state 64

    type  ->  '(' types . ')'   (rule 45)

    ')' 	shift, and go to state 102



state 65

    types  ->  type .   (rule 41)
    types  ->  type . ',' type_list   (rule 42)

    ',' 	shift, and go to state 103

    $default	reduce using rule 41 (types)



state 66

    type  ->  '[' exp . ']' type   (rule 50)

    ']' 	shift, and go to state 104



state 67

    field  ->  ID . ':' type   (rule 24)
    ids  ->  ID . ',' ids_aux   (rule 37)

    ':' 	shift, and go to state 105
    ',' 	shift, and go to state 9



state 68

    type  ->  '{' fields . '}'   (rule 51)

    '}' 	shift, and go to state 106



state 69

    fields  ->  field .   (rule 18)
    fields  ->  field . ';' field_list   (rule 19)

    ';' 	shift, and go to state 107

    $default	reduce using rule 18 (fields)



state 70

    field  ->  ids . ':' type   (rule 23)

    ':' 	shift, and go to state 108



state 71

    global  ->  ID ':' type ASSIGN . exp   (rule 33)

    ID  	shift, and go to state 12
    INT_LIT	shift, and go to state 13
    REAL_LIT	shift, and go to state 14
    BOOL_LIT	shift, and go to state 15
    STRING_LIT	shift, and go to state 16
    RECURSE	shift, and go to state 17
    NOT 	shift, and go to state 18
    '-' 	shift, and go to state 19
    '(' 	shift, and go to state 20

    exp 	go to state 109
    sexp	go to state 22



state 72

    global_type  ->  type RETURNS . type   (rule 54)

    error	shift, and go to state 26
    INT 	shift, and go to state 27
    REAL	shift, and go to state 28
    BOOL	shift, and go to state 29
    STRING	shift, and go to state 30
    '(' 	shift, and go to state 31
    '[' 	shift, and go to state 32
    '{' 	shift, and go to state 33

    type	go to state 110



state 73

    global  ->  ID ':' global_type EQ . global_exp   (rule 35)

    ID  	shift, and go to state 12
    MAP 	shift, and go to state 23
    INT_LIT	shift, and go to state 13
    REAL_LIT	shift, and go to state 14
    BOOL_LIT	shift, and go to state 15
    STRING_LIT	shift, and go to state 16
    RECURSE	shift, and go to state 17
    NOT 	shift, and go to state 18
    '-' 	shift, and go to state 19
    '(' 	shift, and go to state 20

    sexp	go to state 24
    global_exp	go to state 111



state 74

    ids_aux  ->  ID ',' . ids_aux   (rule 39)

    ID  	shift, and go to state 36

    ids_aux	go to state 112



state 75

    global_list  ->  global ';' . global_list   (rule 29)

    error	shift, and go to state 38
    ID  	shift, and go to state 2

    global_list	go to state 113
    global	go to state 40
    ids 	go to state 5



state 76

    sexp  ->  RECURSE '(' ')' .   (rule 80)

    $default	reduce using rule 80 (sexp)



state 77

    sexp  ->  RECURSE '(' exp . ')'   (rule 79)

    ')' 	shift, and go to state 114



state 78

    sexp  ->  '(' exp ')' .   (rule 59)

    $default	reduce using rule 59 (sexp)



state 79

    sexp  ->  sexp . OR sexp   (rule 60)
    sexp  ->  sexp . AND sexp   (rule 61)
    sexp  ->  sexp AND sexp .   (rule 61)
    sexp  ->  sexp . LT sexp   (rule 63)
    sexp  ->  sexp . LE sexp   (rule 64)
    sexp  ->  sexp . EQ sexp   (rule 65)
    sexp  ->  sexp . NE sexp   (rule 66)
    sexp  ->  sexp . GE sexp   (rule 67)
    sexp  ->  sexp . GT sexp   (rule 68)
    sexp  ->  sexp . '+' sexp   (rule 69)
    sexp  ->  sexp . '-' sexp   (rule 70)
    sexp  ->  sexp . '*' sexp   (rule 71)
    sexp  ->  sexp . '/' sexp   (rule 72)
    sexp  ->  sexp . '%' sexp   (rule 73)
    sexp  ->  sexp . '.' ID   (rule 75)
    sexp  ->  sexp . '[' exp ']'   (rule 76)
    sexp  ->  sexp . '(' exp ')'   (rule 77)
    sexp  ->  sexp . '(' ')'   (rule 78)

    LT  	shift, and go to state 48
    LE  	shift, and go to state 49
    EQ  	shift, and go to state 50
    NE  	shift, and go to state 51
    GE  	shift, and go to state 52
    GT  	shift, and go to state 53
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '*' 	shift, and go to state 57
    '/' 	shift, and go to state 58
    '%' 	shift, and go to state 59
    '(' 	shift, and go to state 60
    '[' 	shift, and go to state 61
    '.' 	shift, and go to state 62

    $default	reduce using rule 61 (sexp)



state 80

    sexp  ->  sexp . OR sexp   (rule 60)
    sexp  ->  sexp OR sexp .   (rule 60)
    sexp  ->  sexp . AND sexp   (rule 61)
    sexp  ->  sexp . LT sexp   (rule 63)
    sexp  ->  sexp . LE sexp   (rule 64)
    sexp  ->  sexp . EQ sexp   (rule 65)
    sexp  ->  sexp . NE sexp   (rule 66)
    sexp  ->  sexp . GE sexp   (rule 67)
    sexp  ->  sexp . GT sexp   (rule 68)
    sexp  ->  sexp . '+' sexp   (rule 69)
    sexp  ->  sexp . '-' sexp   (rule 70)
    sexp  ->  sexp . '*' sexp   (rule 71)
    sexp  ->  sexp . '/' sexp   (rule 72)
    sexp  ->  sexp . '%' sexp   (rule 73)
    sexp  ->  sexp . '.' ID   (rule 75)
    sexp  ->  sexp . '[' exp ']'   (rule 76)
    sexp  ->  sexp . '(' exp ')'   (rule 77)
    sexp  ->  sexp . '(' ')'   (rule 78)

    AND 	shift, and go to state 46
    LT  	shift, and go to state 48
    LE  	shift, and go to state 49
    EQ  	shift, and go to state 50
    NE  	shift, and go to state 51
    GE  	shift, and go to state 52
    GT  	shift, and go to state 53
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '*' 	shift, and go to state 57
    '/' 	shift, and go to state 58
    '%' 	shift, and go to state 59
    '(' 	shift, and go to state 60
    '[' 	shift, and go to state 61
    '.' 	shift, and go to state 62

    $default	reduce using rule 60 (sexp)



state 81

    sexp  ->  sexp . OR sexp   (rule 60)
    sexp  ->  sexp . AND sexp   (rule 61)
    sexp  ->  sexp . LT sexp   (rule 63)
    sexp  ->  sexp LT sexp .   (rule 63)
    sexp  ->  sexp . LE sexp   (rule 64)
    sexp  ->  sexp . EQ sexp   (rule 65)
    sexp  ->  sexp . NE sexp   (rule 66)
    sexp  ->  sexp . GE sexp   (rule 67)
    sexp  ->  sexp . GT sexp   (rule 68)
    sexp  ->  sexp . '+' sexp   (rule 69)
    sexp  ->  sexp . '-' sexp   (rule 70)
    sexp  ->  sexp . '*' sexp   (rule 71)
    sexp  ->  sexp . '/' sexp   (rule 72)
    sexp  ->  sexp . '%' sexp   (rule 73)
    sexp  ->  sexp . '.' ID   (rule 75)
    sexp  ->  sexp . '[' exp ']'   (rule 76)
    sexp  ->  sexp . '(' exp ')'   (rule 77)
    sexp  ->  sexp . '(' ')'   (rule 78)

    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '*' 	shift, and go to state 57
    '/' 	shift, and go to state 58
    '%' 	shift, and go to state 59
    '(' 	shift, and go to state 60
    '[' 	shift, and go to state 61
    '.' 	shift, and go to state 62

    LT  	error (nonassociative)
    LE  	error (nonassociative)
    EQ  	error (nonassociative)
    NE  	error (nonassociative)
    GE  	error (nonassociative)
    GT  	error (nonassociative)

    $default	reduce using rule 63 (sexp)



state 82

    sexp  ->  sexp . OR sexp   (rule 60)
    sexp  ->  sexp . AND sexp   (rule 61)
    sexp  ->  sexp . LT sexp   (rule 63)
    sexp  ->  sexp . LE sexp   (rule 64)
    sexp  ->  sexp LE sexp .   (rule 64)
    sexp  ->  sexp . EQ sexp   (rule 65)
    sexp  ->  sexp . NE sexp   (rule 66)
    sexp  ->  sexp . GE sexp   (rule 67)
    sexp  ->  sexp . GT sexp   (rule 68)
    sexp  ->  sexp . '+' sexp   (rule 69)
    sexp  ->  sexp . '-' sexp   (rule 70)
    sexp  ->  sexp . '*' sexp   (rule 71)
    sexp  ->  sexp . '/' sexp   (rule 72)
    sexp  ->  sexp . '%' sexp   (rule 73)
    sexp  ->  sexp . '.' ID   (rule 75)
    sexp  ->  sexp . '[' exp ']'   (rule 76)
    sexp  ->  sexp . '(' exp ')'   (rule 77)
    sexp  ->  sexp . '(' ')'   (rule 78)

    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '*' 	shift, and go to state 57
    '/' 	shift, and go to state 58
    '%' 	shift, and go to state 59
    '(' 	shift, and go to state 60
    '[' 	shift, and go to state 61
    '.' 	shift, and go to state 62

    LT  	error (nonassociative)
    LE  	error (nonassociative)
    EQ  	error (nonassociative)
    NE  	error (nonassociative)
    GE  	error (nonassociative)
    GT  	error (nonassociative)

    $default	reduce using rule 64 (sexp)



state 83

    sexp  ->  sexp . OR sexp   (rule 60)
    sexp  ->  sexp . AND sexp   (rule 61)
    sexp  ->  sexp . LT sexp   (rule 63)
    sexp  ->  sexp . LE sexp   (rule 64)
    sexp  ->  sexp . EQ sexp   (rule 65)
    sexp  ->  sexp EQ sexp .   (rule 65)
    sexp  ->  sexp . NE sexp   (rule 66)
    sexp  ->  sexp . GE sexp   (rule 67)
    sexp  ->  sexp . GT sexp   (rule 68)
    sexp  ->  sexp . '+' sexp   (rule 69)
    sexp  ->  sexp . '-' sexp   (rule 70)
    sexp  ->  sexp . '*' sexp   (rule 71)
    sexp  ->  sexp . '/' sexp   (rule 72)
    sexp  ->  sexp . '%' sexp   (rule 73)
    sexp  ->  sexp . '.' ID   (rule 75)
    sexp  ->  sexp . '[' exp ']'   (rule 76)
    sexp  ->  sexp . '(' exp ')'   (rule 77)
    sexp  ->  sexp . '(' ')'   (rule 78)

    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '*' 	shift, and go to state 57
    '/' 	shift, and go to state 58
    '%' 	shift, and go to state 59
    '(' 	shift, and go to state 60
    '[' 	shift, and go to state 61
    '.' 	shift, and go to state 62

    LT  	error (nonassociative)
    LE  	error (nonassociative)
    EQ  	error (nonassociative)
    NE  	error (nonassociative)
    GE  	error (nonassociative)
    GT  	error (nonassociative)

    $default	reduce using rule 65 (sexp)



state 84

    sexp  ->  sexp . OR sexp   (rule 60)
    sexp  ->  sexp . AND sexp   (rule 61)
    sexp  ->  sexp . LT sexp   (rule 63)
    sexp  ->  sexp . LE sexp   (rule 64)
    sexp  ->  sexp . EQ sexp   (rule 65)
    sexp  ->  sexp . NE sexp   (rule 66)
    sexp  ->  sexp NE sexp .   (rule 66)
    sexp  ->  sexp . GE sexp   (rule 67)
    sexp  ->  sexp . GT sexp   (rule 68)
    sexp  ->  sexp . '+' sexp   (rule 69)
    sexp  ->  sexp . '-' sexp   (rule 70)
    sexp  ->  sexp . '*' sexp   (rule 71)
    sexp  ->  sexp . '/' sexp   (rule 72)
    sexp  ->  sexp . '%' sexp   (rule 73)
    sexp  ->  sexp . '.' ID   (rule 75)
    sexp  ->  sexp . '[' exp ']'   (rule 76)
    sexp  ->  sexp . '(' exp ')'   (rule 77)
    sexp  ->  sexp . '(' ')'   (rule 78)

    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '*' 	shift, and go to state 57
    '/' 	shift, and go to state 58
    '%' 	shift, and go to state 59
    '(' 	shift, and go to state 60
    '[' 	shift, and go to state 61
    '.' 	shift, and go to state 62

    LT  	error (nonassociative)
    LE  	error (nonassociative)
    EQ  	error (nonassociative)
    NE  	error (nonassociative)
    GE  	error (nonassociative)
    GT  	error (nonassociative)

    $default	reduce using rule 66 (sexp)



state 85

    sexp  ->  sexp . OR sexp   (rule 60)
    sexp  ->  sexp . AND sexp   (rule 61)
    sexp  ->  sexp . LT sexp   (rule 63)
    sexp  ->  sexp . LE sexp   (rule 64)
    sexp  ->  sexp . EQ sexp   (rule 65)
    sexp  ->  sexp . NE sexp   (rule 66)
    sexp  ->  sexp . GE sexp   (rule 67)
    sexp  ->  sexp GE sexp .   (rule 67)
    sexp  ->  sexp . GT sexp   (rule 68)
    sexp  ->  sexp . '+' sexp   (rule 69)
    sexp  ->  sexp . '-' sexp   (rule 70)
    sexp  ->  sexp . '*' sexp   (rule 71)
    sexp  ->  sexp . '/' sexp   (rule 72)
    sexp  ->  sexp . '%' sexp   (rule 73)
    sexp  ->  sexp . '.' ID   (rule 75)
    sexp  ->  sexp . '[' exp ']'   (rule 76)
    sexp  ->  sexp . '(' exp ')'   (rule 77)
    sexp  ->  sexp . '(' ')'   (rule 78)

    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '*' 	shift, and go to state 57
    '/' 	shift, and go to state 58
    '%' 	shift, and go to state 59
    '(' 	shift, and go to state 60
    '[' 	shift, and go to state 61
    '.' 	shift, and go to state 62

    LT  	error (nonassociative)
    LE  	error (nonassociative)
    EQ  	error (nonassociative)
    NE  	error (nonassociative)
    GE  	error (nonassociative)
    GT  	error (nonassociative)

    $default	reduce using rule 67 (sexp)



state 86

    sexp  ->  sexp . OR sexp   (rule 60)
    sexp  ->  sexp . AND sexp   (rule 61)
    sexp  ->  sexp . LT sexp   (rule 63)
    sexp  ->  sexp . LE sexp   (rule 64)
    sexp  ->  sexp . EQ sexp   (rule 65)
    sexp  ->  sexp . NE sexp   (rule 66)
    sexp  ->  sexp . GE sexp   (rule 67)
    sexp  ->  sexp . GT sexp   (rule 68)
    sexp  ->  sexp GT sexp .   (rule 68)
    sexp  ->  sexp . '+' sexp   (rule 69)
    sexp  ->  sexp . '-' sexp   (rule 70)
    sexp  ->  sexp . '*' sexp   (rule 71)
    sexp  ->  sexp . '/' sexp   (rule 72)
    sexp  ->  sexp . '%' sexp   (rule 73)
    sexp  ->  sexp . '.' ID   (rule 75)
    sexp  ->  sexp . '[' exp ']'   (rule 76)
    sexp  ->  sexp . '(' exp ')'   (rule 77)
    sexp  ->  sexp . '(' ')'   (rule 78)

    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '*' 	shift, and go to state 57
    '/' 	shift, and go to state 58
    '%' 	shift, and go to state 59
    '(' 	shift, and go to state 60
    '[' 	shift, and go to state 61
    '.' 	shift, and go to state 62

    LT  	error (nonassociative)
    LE  	error (nonassociative)
    EQ  	error (nonassociative)
    NE  	error (nonassociative)
    GE  	error (nonassociative)
    GT  	error (nonassociative)

    $default	reduce using rule 68 (sexp)



state 87

    exp  ->  sexp ',' exp_list .   (rule 56)

    $default	reduce using rule 56 (exp)



state 88

    exp_list  ->  sexp .   (rule 57)
    exp_list  ->  sexp . ',' exp_list   (rule 58)
    sexp  ->  sexp . OR sexp   (rule 60)
    sexp  ->  sexp . AND sexp   (rule 61)
    sexp  ->  sexp . LT sexp   (rule 63)
    sexp  ->  sexp . LE sexp   (rule 64)
    sexp  ->  sexp . EQ sexp   (rule 65)
    sexp  ->  sexp . NE sexp   (rule 66)
    sexp  ->  sexp . GE sexp   (rule 67)
    sexp  ->  sexp . GT sexp   (rule 68)
    sexp  ->  sexp . '+' sexp   (rule 69)
    sexp  ->  sexp . '-' sexp   (rule 70)
    sexp  ->  sexp . '*' sexp   (rule 71)
    sexp  ->  sexp . '/' sexp   (rule 72)
    sexp  ->  sexp . '%' sexp   (rule 73)
    sexp  ->  sexp . '.' ID   (rule 75)
    sexp  ->  sexp . '[' exp ']'   (rule 76)
    sexp  ->  sexp . '(' exp ')'   (rule 77)
    sexp  ->  sexp . '(' ')'   (rule 78)

    AND 	shift, and go to state 46
    OR  	shift, and go to state 47
    LT  	shift, and go to state 48
    LE  	shift, and go to state 49
    EQ  	shift, and go to state 50
    NE  	shift, and go to state 51
    GE  	shift, and go to state 52
    GT  	shift, and go to state 53
    ',' 	shift, and go to state 115
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '*' 	shift, and go to state 57
    '/' 	shift, and go to state 58
    '%' 	shift, and go to state 59
    '(' 	shift, and go to state 60
    '[' 	shift, and go to state 61
    '.' 	shift, and go to state 62

    $default	reduce using rule 57 (exp_list)



state 89

    sexp  ->  sexp . OR sexp   (rule 60)
    sexp  ->  sexp . AND sexp   (rule 61)
    sexp  ->  sexp . LT sexp   (rule 63)
    sexp  ->  sexp . LE sexp   (rule 64)
    sexp  ->  sexp . EQ sexp   (rule 65)
    sexp  ->  sexp . NE sexp   (rule 66)
    sexp  ->  sexp . GE sexp   (rule 67)
    sexp  ->  sexp . GT sexp   (rule 68)
    sexp  ->  sexp . '+' sexp   (rule 69)
    sexp  ->  sexp '+' sexp .   (rule 69)
    sexp  ->  sexp . '-' sexp   (rule 70)
    sexp  ->  sexp . '*' sexp   (rule 71)
    sexp  ->  sexp . '/' sexp   (rule 72)
    sexp  ->  sexp . '%' sexp   (rule 73)
    sexp  ->  sexp . '.' ID   (rule 75)
    sexp  ->  sexp . '[' exp ']'   (rule 76)
    sexp  ->  sexp . '(' exp ')'   (rule 77)
    sexp  ->  sexp . '(' ')'   (rule 78)

    '*' 	shift, and go to state 57
    '/' 	shift, and go to state 58
    '%' 	shift, and go to state 59
    '(' 	shift, and go to state 60
    '[' 	shift, and go to state 61
    '.' 	shift, and go to state 62

    $default	reduce using rule 69 (sexp)



state 90

    sexp  ->  sexp . OR sexp   (rule 60)
    sexp  ->  sexp . AND sexp   (rule 61)
    sexp  ->  sexp . LT sexp   (rule 63)
    sexp  ->  sexp . LE sexp   (rule 64)
    sexp  ->  sexp . EQ sexp   (rule 65)
    sexp  ->  sexp . NE sexp   (rule 66)
    sexp  ->  sexp . GE sexp   (rule 67)
    sexp  ->  sexp . GT sexp   (rule 68)
    sexp  ->  sexp . '+' sexp   (rule 69)
    sexp  ->  sexp . '-' sexp   (rule 70)
    sexp  ->  sexp '-' sexp .   (rule 70)
    sexp  ->  sexp . '*' sexp   (rule 71)
    sexp  ->  sexp . '/' sexp   (rule 72)
    sexp  ->  sexp . '%' sexp   (rule 73)
    sexp  ->  sexp . '.' ID   (rule 75)
    sexp  ->  sexp . '[' exp ']'   (rule 76)
    sexp  ->  sexp . '(' exp ')'   (rule 77)
    sexp  ->  sexp . '(' ')'   (rule 78)

    '*' 	shift, and go to state 57
    '/' 	shift, and go to state 58
    '%' 	shift, and go to state 59
    '(' 	shift, and go to state 60
    '[' 	shift, and go to state 61
    '.' 	shift, and go to state 62

    $default	reduce using rule 70 (sexp)



state 91

    sexp  ->  sexp . OR sexp   (rule 60)
    sexp  ->  sexp . AND sexp   (rule 61)
    sexp  ->  sexp . LT sexp   (rule 63)
    sexp  ->  sexp . LE sexp   (rule 64)
    sexp  ->  sexp . EQ sexp   (rule 65)
    sexp  ->  sexp . NE sexp   (rule 66)
    sexp  ->  sexp . GE sexp   (rule 67)
    sexp  ->  sexp . GT sexp   (rule 68)
    sexp  ->  sexp . '+' sexp   (rule 69)
    sexp  ->  sexp . '-' sexp   (rule 70)
    sexp  ->  sexp . '*' sexp   (rule 71)
    sexp  ->  sexp '*' sexp .   (rule 71)
    sexp  ->  sexp . '/' sexp   (rule 72)
    sexp  ->  sexp . '%' sexp   (rule 73)
    sexp  ->  sexp . '.' ID   (rule 75)
    sexp  ->  sexp . '[' exp ']'   (rule 76)
    sexp  ->  sexp . '(' exp ')'   (rule 77)
    sexp  ->  sexp . '(' ')'   (rule 78)

    '(' 	shift, and go to state 60
    '[' 	shift, and go to state 61
    '.' 	shift, and go to state 62

    $default	reduce using rule 71 (sexp)



state 92

    sexp  ->  sexp . OR sexp   (rule 60)
    sexp  ->  sexp . AND sexp   (rule 61)
    sexp  ->  sexp . LT sexp   (rule 63)
    sexp  ->  sexp . LE sexp   (rule 64)
    sexp  ->  sexp . EQ sexp   (rule 65)
    sexp  ->  sexp . NE sexp   (rule 66)
    sexp  ->  sexp . GE sexp   (rule 67)
    sexp  ->  sexp . GT sexp   (rule 68)
    sexp  ->  sexp . '+' sexp   (rule 69)
    sexp  ->  sexp . '-' sexp   (rule 70)
    sexp  ->  sexp . '*' sexp   (rule 71)
    sexp  ->  sexp . '/' sexp   (rule 72)
    sexp  ->  sexp '/' sexp .   (rule 72)
    sexp  ->  sexp . '%' sexp   (rule 73)
    sexp  ->  sexp . '.' ID   (rule 75)
    sexp  ->  sexp . '[' exp ']'   (rule 76)
    sexp  ->  sexp . '(' exp ')'   (rule 77)
    sexp  ->  sexp . '(' ')'   (rule 78)

    '(' 	shift, and go to state 60
    '[' 	shift, and go to state 61
    '.' 	shift, and go to state 62

    $default	reduce using rule 72 (sexp)



state 93

    sexp  ->  sexp . OR sexp   (rule 60)
    sexp  ->  sexp . AND sexp   (rule 61)
    sexp  ->  sexp . LT sexp   (rule 63)
    sexp  ->  sexp . LE sexp   (rule 64)
    sexp  ->  sexp . EQ sexp   (rule 65)
    sexp  ->  sexp . NE sexp   (rule 66)
    sexp  ->  sexp . GE sexp   (rule 67)
    sexp  ->  sexp . GT sexp   (rule 68)
    sexp  ->  sexp . '+' sexp   (rule 69)
    sexp  ->  sexp . '-' sexp   (rule 70)
    sexp  ->  sexp . '*' sexp   (rule 71)
    sexp  ->  sexp . '/' sexp   (rule 72)
    sexp  ->  sexp . '%' sexp   (rule 73)
    sexp  ->  sexp '%' sexp .   (rule 73)
    sexp  ->  sexp . '.' ID   (rule 75)
    sexp  ->  sexp . '[' exp ']'   (rule 76)
    sexp  ->  sexp . '(' exp ')'   (rule 77)
    sexp  ->  sexp . '(' ')'   (rule 78)

    '(' 	shift, and go to state 60
    '[' 	shift, and go to state 61
    '.' 	shift, and go to state 62

    $default	reduce using rule 73 (sexp)



state 94

    sexp  ->  sexp '(' ')' .   (rule 78)

    $default	reduce using rule 78 (sexp)



state 95

    sexp  ->  sexp '(' exp . ')'   (rule 77)

    ')' 	shift, and go to state 116



state 96

    sexp  ->  sexp '[' exp . ']'   (rule 76)

    ']' 	shift, and go to state 117



state 97

    sexp  ->  sexp '.' ID .   (rule 75)

    $default	reduce using rule 75 (sexp)



state 98

    formal  ->  ID .   (rule 15)
    formal  ->  ID . ':' type   (rule 17)
    ids  ->  ID . ',' ids_aux   (rule 37)

    ':' 	shift, and go to state 118
    ',' 	shift, and go to state 9

    $default	reduce using rule 15 (formal)



state 99

    global_exp  ->  MAP '(' formals . ')' '[' stats ']'   (rule 87)
    global_exp  ->  MAP '(' formals . ')' RETURNS type '[' stats ']'   (rule 88)

    ')' 	shift, and go to state 119



state 100

    formals  ->  formal .   (rule 9)
    formals  ->  formal . ';' formal_list   (rule 10)

    ';' 	shift, and go to state 120

    $default	reduce using rule 9 (formals)



state 101

    formal  ->  ids .   (rule 14)
    formal  ->  ids . ':' type   (rule 16)

    ':' 	shift, and go to state 121

    $default	reduce using rule 14 (formal)



state 102

    type  ->  '(' types ')' .   (rule 45)

    $default	reduce using rule 45 (type)



state 103

    types  ->  type ',' . type_list   (rule 42)

    error	shift, and go to state 26
    INT 	shift, and go to state 27
    REAL	shift, and go to state 28
    BOOL	shift, and go to state 29
    STRING	shift, and go to state 30
    '(' 	shift, and go to state 31
    '[' 	shift, and go to state 32
    '{' 	shift, and go to state 33

    type_list	go to state 122
    type	go to state 123



state 104

    type  ->  '[' exp ']' . type   (rule 50)

    error	shift, and go to state 26
    INT 	shift, and go to state 27
    REAL	shift, and go to state 28
    BOOL	shift, and go to state 29
    STRING	shift, and go to state 30
    '(' 	shift, and go to state 31
    '[' 	shift, and go to state 32
    '{' 	shift, and go to state 33

    type	go to state 124



state 105

    field  ->  ID ':' . type   (rule 24)

    error	shift, and go to state 26
    INT 	shift, and go to state 27
    REAL	shift, and go to state 28
    BOOL	shift, and go to state 29
    STRING	shift, and go to state 30
    '(' 	shift, and go to state 31
    '[' 	shift, and go to state 32
    '{' 	shift, and go to state 33

    type	go to state 125



state 106

    type  ->  '{' fields '}' .   (rule 51)

    $default	reduce using rule 51 (type)



state 107

    fields  ->  field ';' . field_list   (rule 19)

    error	shift, and go to state 126
    ID  	shift, and go to state 67

    field_list	go to state 127
    field	go to state 128
    ids 	go to state 70



state 108

    field  ->  ids ':' . type   (rule 23)

    error	shift, and go to state 26
    INT 	shift, and go to state 27
    REAL	shift, and go to state 28
    BOOL	shift, and go to state 29
    STRING	shift, and go to state 30
    '(' 	shift, and go to state 31
    '[' 	shift, and go to state 32
    '{' 	shift, and go to state 33

    type	go to state 129



state 109

    global  ->  ID ':' type ASSIGN exp .   (rule 33)

    $default	reduce using rule 33 (global)



state 110

    global_type  ->  type RETURNS type .   (rule 54)

    $default	reduce using rule 54 (global_type)



state 111

    global  ->  ID ':' global_type EQ global_exp .   (rule 35)

    $default	reduce using rule 35 (global)



state 112

    ids_aux  ->  ID ',' ids_aux .   (rule 39)

    $default	reduce using rule 39 (ids_aux)



state 113

    global_list  ->  global ';' global_list .   (rule 29)

    $default	reduce using rule 29 (global_list)



state 114

    sexp  ->  RECURSE '(' exp ')' .   (rule 79)

    $default	reduce using rule 79 (sexp)



state 115

    exp_list  ->  sexp ',' . exp_list   (rule 58)

    ID  	shift, and go to state 12
    INT_LIT	shift, and go to state 13
    REAL_LIT	shift, and go to state 14
    BOOL_LIT	shift, and go to state 15
    STRING_LIT	shift, and go to state 16
    RECURSE	shift, and go to state 17
    NOT 	shift, and go to state 18
    '-' 	shift, and go to state 19
    '(' 	shift, and go to state 20

    exp_list	go to state 130
    sexp	go to state 88



state 116

    sexp  ->  sexp '(' exp ')' .   (rule 77)

    $default	reduce using rule 77 (sexp)



state 117

    sexp  ->  sexp '[' exp ']' .   (rule 76)

    $default	reduce using rule 76 (sexp)



state 118

    formal  ->  ID ':' . type   (rule 17)

    error	shift, and go to state 26
    INT 	shift, and go to state 27
    REAL	shift, and go to state 28
    BOOL	shift, and go to state 29
    STRING	shift, and go to state 30
    '(' 	shift, and go to state 31
    '[' 	shift, and go to state 32
    '{' 	shift, and go to state 33

    type	go to state 131



state 119

    global_exp  ->  MAP '(' formals ')' . '[' stats ']'   (rule 87)
    global_exp  ->  MAP '(' formals ')' . RETURNS type '[' stats ']'   (rule 88)

    RETURNS	shift, and go to state 132
    '[' 	shift, and go to state 133



state 120

    formals  ->  formal ';' . formal_list   (rule 10)

    error	shift, and go to state 134
    ID  	shift, and go to state 98

    formal_list	go to state 135
    formal	go to state 136
    ids 	go to state 101



state 121

    formal  ->  ids ':' . type   (rule 16)

    error	shift, and go to state 26
    INT 	shift, and go to state 27
    REAL	shift, and go to state 28
    BOOL	shift, and go to state 29
    STRING	shift, and go to state 30
    '(' 	shift, and go to state 31
    '[' 	shift, and go to state 32
    '{' 	shift, and go to state 33

    type	go to state 137



state 122

    types  ->  type ',' type_list .   (rule 42)

    $default	reduce using rule 42 (types)



state 123

    type_list  ->  type .   (rule 43)
    type_list  ->  type . ',' type_list   (rule 44)

    ',' 	shift, and go to state 138

    $default	reduce using rule 43 (type_list)



state 124

    type  ->  '[' exp ']' type .   (rule 50)

    $default	reduce using rule 50 (type)



state 125

    field  ->  ID ':' type .   (rule 24)

    $default	reduce using rule 24 (field)



state 126

    field_list  ->  error .   (rule 22)

    $default	reduce using rule 22 (field_list)



state 127

    fields  ->  field ';' field_list .   (rule 19)

    $default	reduce using rule 19 (fields)



state 128

    field_list  ->  field .   (rule 20)
    field_list  ->  field . ';' field_list   (rule 21)

    ';' 	shift, and go to state 139

    $default	reduce using rule 20 (field_list)



state 129

    field  ->  ids ':' type .   (rule 23)

    $default	reduce using rule 23 (field)



state 130

    exp_list  ->  sexp ',' exp_list .   (rule 58)

    $default	reduce using rule 58 (exp_list)



state 131

    formal  ->  ID ':' type .   (rule 17)

    $default	reduce using rule 17 (formal)



state 132

    global_exp  ->  MAP '(' formals ')' RETURNS . type '[' stats ']'   (rule 88)

    error	shift, and go to state 26
    INT 	shift, and go to state 27
    REAL	shift, and go to state 28
    BOOL	shift, and go to state 29
    STRING	shift, and go to state 30
    '(' 	shift, and go to state 31
    '[' 	shift, and go to state 32
    '{' 	shift, and go to state 33

    type	go to state 140



state 133

    global_exp  ->  MAP '(' formals ')' '[' . stats ']'   (rule 87)

    error	shift, and go to state 141
    ID  	shift, and go to state 142
    RETURN	shift, and go to state 143
    RECURSE	shift, and go to state 144
    BREAK	shift, and go to state 145
    SKIP	shift, and go to state 146
    RETRY	shift, and go to state 147
    COND	shift, and go to state 148
    WHILE	shift, and go to state 149
    '(' 	shift, and go to state 150
    '[' 	shift, and go to state 151

    ']' 	reduce using rule 97 (stats)

    decl	go to state 152
    ids 	go to state 153
    primary	go to state 154
    prim	go to state 155
    stats	go to state 156
    stat_list	go to state 157
    stat	go to state 158
    action	go to state 159



state 134

    formal_list  ->  error .   (rule 13)

    $default	reduce using rule 13 (formal_list)



state 135

    formals  ->  formal ';' formal_list .   (rule 10)

    $default	reduce using rule 10 (formals)



state 136

    formal_list  ->  formal .   (rule 11)
    formal_list  ->  formal . ';' formal_list   (rule 12)

    ';' 	shift, and go to state 160

    $default	reduce using rule 11 (formal_list)



state 137

    formal  ->  ids ':' type .   (rule 16)

    $default	reduce using rule 16 (formal)



state 138

    type_list  ->  type ',' . type_list   (rule 44)

    error	shift, and go to state 26
    INT 	shift, and go to state 27
    REAL	shift, and go to state 28
    BOOL	shift, and go to state 29
    STRING	shift, and go to state 30
    '(' 	shift, and go to state 31
    '[' 	shift, and go to state 32
    '{' 	shift, and go to state 33

    type_list	go to state 161
    type	go to state 123



state 139

    field_list  ->  field ';' . field_list   (rule 21)

    error	shift, and go to state 126
    ID  	shift, and go to state 67

    field_list	go to state 162
    field	go to state 128
    ids 	go to state 70



state 140

    global_exp  ->  MAP '(' formals ')' RETURNS type . '[' stats ']'   (rule 88)

    '[' 	shift, and go to state 163



state 141

    stat_list  ->  error .   (rule 102)

    $default	reduce using rule 102 (stat_list)



state 142

    decl  ->  ID . ':' type   (rule 4)
    decl  ->  ID . ':' type ASSIGN exp   (rule 5)
    decl  ->  ID . ':' type EQ exp   (rule 6)
    decl  ->  ID . EQ exp   (rule 7)
    ids  ->  ID . ',' ids_aux   (rule 37)
    prim  ->  ID .   (rule 94)

    EQ  	shift, and go to state 164
    ':' 	shift, and go to state 165
    ',' 	shift, and go to state 9

    ',' 	[reduce using rule 94 (prim)]
    $default	reduce using rule 94 (prim)



state 143

    stat  ->  RETURN . exp   (rule 105)

    ID  	shift, and go to state 12
    INT_LIT	shift, and go to state 13
    REAL_LIT	shift, and go to state 14
    BOOL_LIT	shift, and go to state 15
    STRING_LIT	shift, and go to state 16
    RECURSE	shift, and go to state 17
    NOT 	shift, and go to state 18
    '-' 	shift, and go to state 19
    '(' 	shift, and go to state 20

    exp 	go to state 166
    sexp	go to state 22



state 144

    action  ->  RECURSE . '(' ')'   (rule 124)
    action  ->  RECURSE . '(' exp ')'   (rule 125)

    '(' 	shift, and go to state 167



state 145

    stat  ->  BREAK .   (rule 106)
    stat  ->  BREAK . INT_LIT   (rule 109)

    INT_LIT	shift, and go to state 168

    $default	reduce using rule 106 (stat)



state 146

    stat  ->  SKIP .   (rule 107)
    stat  ->  SKIP . INT_LIT   (rule 110)

    INT_LIT	shift, and go to state 169

    $default	reduce using rule 107 (stat)



state 147

    stat  ->  RETRY .   (rule 108)
    stat  ->  RETRY . INT_LIT   (rule 111)

    INT_LIT	shift, and go to state 170

    $default	reduce using rule 108 (stat)



state 148

    stat  ->  COND . @2 '[' clauses ']'   (rule 113)

    $default	reduce using rule 112 (@2)

    @2  	go to state 171



state 149

    stat  ->  WHILE . @3 '[' clauses ']'   (rule 115)

    $default	reduce using rule 114 (@3)

    @3  	go to state 172



state 150

    prim  ->  '(' . primary ')'   (rule 93)

    ID  	shift, and go to state 173
    '(' 	shift, and go to state 150

    primary	go to state 174
    prim	go to state 155



state 151

    stat  ->  '[' . stats ']'   (rule 116)

    error	shift, and go to state 141
    ID  	shift, and go to state 142
    RETURN	shift, and go to state 143
    RECURSE	shift, and go to state 144
    BREAK	shift, and go to state 145
    SKIP	shift, and go to state 146
    RETRY	shift, and go to state 147
    COND	shift, and go to state 148
    WHILE	shift, and go to state 149
    '(' 	shift, and go to state 150
    '[' 	shift, and go to state 151

    ']' 	reduce using rule 97 (stats)

    decl	go to state 152
    ids 	go to state 153
    primary	go to state 154
    prim	go to state 155
    stats	go to state 175
    stat_list	go to state 157
    stat	go to state 158
    action	go to state 159



state 152

    stat  ->  decl .   (rule 103)

    $default	reduce using rule 103 (stat)



state 153

    decl  ->  ids . ':' type   (rule 3)

    ':' 	shift, and go to state 176



state 154

    action  ->  primary . ASSIGN exp   (rule 121)
    action  ->  primary . '(' ')'   (rule 122)
    action  ->  primary . '(' exp ')'   (rule 123)

    ASSIGN	shift, and go to state 177
    '(' 	shift, and go to state 178



state 155

    primary  ->  prim .   (rule 89)
    primary  ->  prim . ',' prim_list   (rule 90)
    prim  ->  prim . '.' prim   (rule 95)
    prim  ->  prim . '[' exp ']'   (rule 96)

    ',' 	shift, and go to state 179
    '[' 	shift, and go to state 180
    '.' 	shift, and go to state 181

    $default	reduce using rule 89 (primary)



state 156

    global_exp  ->  MAP '(' formals ')' '[' stats . ']'   (rule 87)

    ']' 	shift, and go to state 182



state 157

    stats  ->  stat_list .   (rule 98)

    $default	reduce using rule 98 (stats)



state 158

    stat_list  ->  stat .   (rule 99)
    stat_list  ->  stat . ';'   (rule 100)
    stat_list  ->  stat . ';' stat_list   (rule 101)

    ';' 	shift, and go to state 183

    $default	reduce using rule 99 (stat_list)



state 159

    stat  ->  action .   (rule 104)

    $default	reduce using rule 104 (stat)



state 160

    formal_list  ->  formal ';' . formal_list   (rule 12)

    error	shift, and go to state 134
    ID  	shift, and go to state 98

    formal_list	go to state 184
    formal	go to state 136
    ids 	go to state 101



state 161

    type_list  ->  type ',' type_list .   (rule 44)

    $default	reduce using rule 44 (type_list)



state 162

    field_list  ->  field ';' field_list .   (rule 21)

    $default	reduce using rule 21 (field_list)



state 163

    global_exp  ->  MAP '(' formals ')' RETURNS type '[' . stats ']'   (rule 88)

    error	shift, and go to state 141
    ID  	shift, and go to state 142
    RETURN	shift, and go to state 143
    RECURSE	shift, and go to state 144
    BREAK	shift, and go to state 145
    SKIP	shift, and go to state 146
    RETRY	shift, and go to state 147
    COND	shift, and go to state 148
    WHILE	shift, and go to state 149
    '(' 	shift, and go to state 150
    '[' 	shift, and go to state 151

    ']' 	reduce using rule 97 (stats)

    decl	go to state 152
    ids 	go to state 153
    primary	go to state 154
    prim	go to state 155
    stats	go to state 185
    stat_list	go to state 157
    stat	go to state 158
    action	go to state 159



state 164

    decl  ->  ID EQ . exp   (rule 7)

    ID  	shift, and go to state 12
    INT_LIT	shift, and go to state 13
    REAL_LIT	shift, and go to state 14
    BOOL_LIT	shift, and go to state 15
    STRING_LIT	shift, and go to state 16
    RECURSE	shift, and go to state 17
    NOT 	shift, and go to state 18
    '-' 	shift, and go to state 19
    '(' 	shift, and go to state 20

    exp 	go to state 186
    sexp	go to state 22



state 165

    decl  ->  ID ':' . type   (rule 4)
    decl  ->  ID ':' . type ASSIGN exp   (rule 5)
    decl  ->  ID ':' . type EQ exp   (rule 6)

    error	shift, and go to state 26
    INT 	shift, and go to state 27
    REAL	shift, and go to state 28
    BOOL	shift, and go to state 29
    STRING	shift, and go to state 30
    '(' 	shift, and go to state 31
    '[' 	shift, and go to state 32
    '{' 	shift, and go to state 33

    type	go to state 187



state 166

    stat  ->  RETURN exp .   (rule 105)

    $default	reduce using rule 105 (stat)



state 167

    action  ->  RECURSE '(' . ')'   (rule 124)
    action  ->  RECURSE '(' . exp ')'   (rule 125)

    ID  	shift, and go to state 12
    INT_LIT	shift, and go to state 13
    REAL_LIT	shift, and go to state 14
    BOOL_LIT	shift, and go to state 15
    STRING_LIT	shift, and go to state 16
    RECURSE	shift, and go to state 17
    NOT 	shift, and go to state 18
    '-' 	shift, and go to state 19
    '(' 	shift, and go to state 20
    ')' 	shift, and go to state 188

    exp 	go to state 189
    sexp	go to state 22



state 168

    stat  ->  BREAK INT_LIT .   (rule 109)

    $default	reduce using rule 109 (stat)



state 169

    stat  ->  SKIP INT_LIT .   (rule 110)

    $default	reduce using rule 110 (stat)



state 170

    stat  ->  RETRY INT_LIT .   (rule 111)

    $default	reduce using rule 111 (stat)



state 171

    stat  ->  COND @2 . '[' clauses ']'   (rule 113)

    '[' 	shift, and go to state 190



state 172

    stat  ->  WHILE @3 . '[' clauses ']'   (rule 115)

    '[' 	shift, and go to state 191



state 173

    prim  ->  ID .   (rule 94)

    $default	reduce using rule 94 (prim)



state 174

    prim  ->  '(' primary . ')'   (rule 93)

    ')' 	shift, and go to state 192



state 175

    stat  ->  '[' stats . ']'   (rule 116)

    ']' 	shift, and go to state 193



state 176

    decl  ->  ids ':' . type   (rule 3)

    error	shift, and go to state 26
    INT 	shift, and go to state 27
    REAL	shift, and go to state 28
    BOOL	shift, and go to state 29
    STRING	shift, and go to state 30
    '(' 	shift, and go to state 31
    '[' 	shift, and go to state 32
    '{' 	shift, and go to state 33

    type	go to state 194



state 177

    action  ->  primary ASSIGN . exp   (rule 121)

    ID  	shift, and go to state 12
    INT_LIT	shift, and go to state 13
    REAL_LIT	shift, and go to state 14
    BOOL_LIT	shift, and go to state 15
    STRING_LIT	shift, and go to state 16
    RECURSE	shift, and go to state 17
    NOT 	shift, and go to state 18
    '-' 	shift, and go to state 19
    '(' 	shift, and go to state 20

    exp 	go to state 195
    sexp	go to state 22



state 178

    action  ->  primary '(' . ')'   (rule 122)
    action  ->  primary '(' . exp ')'   (rule 123)

    ID  	shift, and go to state 12
    INT_LIT	shift, and go to state 13
    REAL_LIT	shift, and go to state 14
    BOOL_LIT	shift, and go to state 15
    STRING_LIT	shift, and go to state 16
    RECURSE	shift, and go to state 17
    NOT 	shift, and go to state 18
    '-' 	shift, and go to state 19
    '(' 	shift, and go to state 20
    ')' 	shift, and go to state 196

    exp 	go to state 197
    sexp	go to state 22



state 179

    primary  ->  prim ',' . prim_list   (rule 90)

    ID  	shift, and go to state 173
    '(' 	shift, and go to state 150

    prim_list	go to state 198
    prim	go to state 199



state 180

    prim  ->  prim '[' . exp ']'   (rule 96)

    ID  	shift, and go to state 12
    INT_LIT	shift, and go to state 13
    REAL_LIT	shift, and go to state 14
    BOOL_LIT	shift, and go to state 15
    STRING_LIT	shift, and go to state 16
    RECURSE	shift, and go to state 17
    NOT 	shift, and go to state 18
    '-' 	shift, and go to state 19
    '(' 	shift, and go to state 20

    exp 	go to state 200
    sexp	go to state 22



state 181

    prim  ->  prim '.' . prim   (rule 95)

    ID  	shift, and go to state 173
    '(' 	shift, and go to state 150

    prim	go to state 201



state 182

    global_exp  ->  MAP '(' formals ')' '[' stats ']' .   (rule 87)

    $default	reduce using rule 87 (global_exp)



state 183

    stat_list  ->  stat ';' .   (rule 100)
    stat_list  ->  stat ';' . stat_list   (rule 101)

    error	shift, and go to state 141
    ID  	shift, and go to state 142
    RETURN	shift, and go to state 143
    RECURSE	shift, and go to state 144
    BREAK	shift, and go to state 145
    SKIP	shift, and go to state 146
    RETRY	shift, and go to state 147
    COND	shift, and go to state 148
    WHILE	shift, and go to state 149
    '(' 	shift, and go to state 150
    '[' 	shift, and go to state 151

    ']' 	reduce using rule 100 (stat_list)
    '|' 	reduce using rule 100 (stat_list)

    decl	go to state 152
    ids 	go to state 153
    primary	go to state 154
    prim	go to state 155
    stat_list	go to state 202
    stat	go to state 158
    action	go to state 159



state 184

    formal_list  ->  formal ';' formal_list .   (rule 12)

    $default	reduce using rule 12 (formal_list)



state 185

    global_exp  ->  MAP '(' formals ')' RETURNS type '[' stats . ']'   (rule 88)

    ']' 	shift, and go to state 203



state 186

    decl  ->  ID EQ exp .   (rule 7)

    $default	reduce using rule 7 (decl)



state 187

    decl  ->  ID ':' type .   (rule 4)
    decl  ->  ID ':' type . ASSIGN exp   (rule 5)
    decl  ->  ID ':' type . EQ exp   (rule 6)

    ASSIGN	shift, and go to state 204
    EQ  	shift, and go to state 205

    $default	reduce using rule 4 (decl)



state 188

    action  ->  RECURSE '(' ')' .   (rule 124)

    $default	reduce using rule 124 (action)



state 189

    action  ->  RECURSE '(' exp . ')'   (rule 125)

    ')' 	shift, and go to state 206



state 190

    stat  ->  COND @2 '[' . clauses ']'   (rule 113)

    error	shift, and go to state 207
    ID  	shift, and go to state 12
    INT_LIT	shift, and go to state 13
    REAL_LIT	shift, and go to state 14
    BOOL_LIT	shift, and go to state 15
    STRING_LIT	shift, and go to state 16
    RECURSE	shift, and go to state 17
    NOT 	shift, and go to state 18
    '-' 	shift, and go to state 19
    '(' 	shift, and go to state 20

    exp 	go to state 208
    sexp	go to state 22
    clauses	go to state 209



state 191

    stat  ->  WHILE @3 '[' . clauses ']'   (rule 115)

    error	shift, and go to state 207
    ID  	shift, and go to state 12
    INT_LIT	shift, and go to state 13
    REAL_LIT	shift, and go to state 14
    BOOL_LIT	shift, and go to state 15
    STRING_LIT	shift, and go to state 16
    RECURSE	shift, and go to state 17
    NOT 	shift, and go to state 18
    '-' 	shift, and go to state 19
    '(' 	shift, and go to state 20

    exp 	go to state 208
    sexp	go to state 22
    clauses	go to state 210



state 192

    prim  ->  '(' primary ')' .   (rule 93)

    $default	reduce using rule 93 (prim)



state 193

    stat  ->  '[' stats ']' .   (rule 116)

    $default	reduce using rule 116 (stat)



state 194

    decl  ->  ids ':' type .   (rule 3)

    $default	reduce using rule 3 (decl)



state 195

    action  ->  primary ASSIGN exp .   (rule 121)

    $default	reduce using rule 121 (action)



state 196

    action  ->  primary '(' ')' .   (rule 122)

    $default	reduce using rule 122 (action)



state 197

    action  ->  primary '(' exp . ')'   (rule 123)

    ')' 	shift, and go to state 211



state 198

    primary  ->  prim ',' prim_list .   (rule 90)

    $default	reduce using rule 90 (primary)



state 199

    prim_list  ->  prim .   (rule 91)
    prim_list  ->  prim . ',' prim_list   (rule 92)
    prim  ->  prim . '.' prim   (rule 95)
    prim  ->  prim . '[' exp ']'   (rule 96)

    ',' 	shift, and go to state 212
    '[' 	shift, and go to state 180
    '.' 	shift, and go to state 181

    $default	reduce using rule 91 (prim_list)



state 200

    prim  ->  prim '[' exp . ']'   (rule 96)

    ']' 	shift, and go to state 213



state 201

    prim  ->  prim . '.' prim   (rule 95)
    prim  ->  prim '.' prim .   (rule 95)
    prim  ->  prim . '[' exp ']'   (rule 96)


    $default	reduce using rule 95 (prim)



state 202

    stat_list  ->  stat ';' stat_list .   (rule 101)

    $default	reduce using rule 101 (stat_list)



state 203

    global_exp  ->  MAP '(' formals ')' RETURNS type '[' stats ']' .   (rule 88)

    $default	reduce using rule 88 (global_exp)



state 204

    decl  ->  ID ':' type ASSIGN . exp   (rule 5)

    ID  	shift, and go to state 12
    INT_LIT	shift, and go to state 13
    REAL_LIT	shift, and go to state 14
    BOOL_LIT	shift, and go to state 15
    STRING_LIT	shift, and go to state 16
    RECURSE	shift, and go to state 17
    NOT 	shift, and go to state 18
    '-' 	shift, and go to state 19
    '(' 	shift, and go to state 20

    exp 	go to state 214
    sexp	go to state 22



state 205

    decl  ->  ID ':' type EQ . exp   (rule 6)

    ID  	shift, and go to state 12
    INT_LIT	shift, and go to state 13
    REAL_LIT	shift, and go to state 14
    BOOL_LIT	shift, and go to state 15
    STRING_LIT	shift, and go to state 16
    RECURSE	shift, and go to state 17
    NOT 	shift, and go to state 18
    '-' 	shift, and go to state 19
    '(' 	shift, and go to state 20

    exp 	go to state 215
    sexp	go to state 22



state 206

    action  ->  RECURSE '(' exp ')' .   (rule 125)

    $default	reduce using rule 125 (action)



state 207

    clauses  ->  error . ']'   (rule 120)

    ']' 	shift, and go to state 216



state 208

    clauses  ->  exp . RETURNS stats   (rule 117)
    clauses  ->  exp . RETURNS stats '|' clauses   (rule 118)
    clauses  ->  exp . RETURNS stats '|' ELSE RETURNS stats   (rule 119)

    RETURNS	shift, and go to state 217



state 209

    stat  ->  COND @2 '[' clauses . ']'   (rule 113)

    ']' 	shift, and go to state 218



state 210

    stat  ->  WHILE @3 '[' clauses . ']'   (rule 115)

    ']' 	shift, and go to state 219



state 211

    action  ->  primary '(' exp ')' .   (rule 123)

    $default	reduce using rule 123 (action)



state 212

    prim_list  ->  prim ',' . prim_list   (rule 92)

    ID  	shift, and go to state 173
    '(' 	shift, and go to state 150

    prim_list	go to state 220
    prim	go to state 199



state 213

    prim  ->  prim '[' exp ']' .   (rule 96)

    $default	reduce using rule 96 (prim)



state 214

    decl  ->  ID ':' type ASSIGN exp .   (rule 5)

    $default	reduce using rule 5 (decl)



state 215

    decl  ->  ID ':' type EQ exp .   (rule 6)

    $default	reduce using rule 6 (decl)



state 216

    clauses  ->  error ']' .   (rule 120)

    $default	reduce using rule 120 (clauses)



state 217

    clauses  ->  exp RETURNS . stats   (rule 117)
    clauses  ->  exp RETURNS . stats '|' clauses   (rule 118)
    clauses  ->  exp RETURNS . stats '|' ELSE RETURNS stats   (rule 119)

    error	shift, and go to state 141
    ID  	shift, and go to state 142
    RETURN	shift, and go to state 143
    RECURSE	shift, and go to state 144
    BREAK	shift, and go to state 145
    SKIP	shift, and go to state 146
    RETRY	shift, and go to state 147
    COND	shift, and go to state 148
    WHILE	shift, and go to state 149
    '(' 	shift, and go to state 150
    '[' 	shift, and go to state 151

    ']' 	reduce using rule 97 (stats)
    '|' 	reduce using rule 97 (stats)

    decl	go to state 152
    ids 	go to state 153
    primary	go to state 154
    prim	go to state 155
    stats	go to state 221
    stat_list	go to state 157
    stat	go to state 158
    action	go to state 159



state 218

    stat  ->  COND @2 '[' clauses ']' .   (rule 113)

    $default	reduce using rule 113 (stat)



state 219

    stat  ->  WHILE @3 '[' clauses ']' .   (rule 115)

    $default	reduce using rule 115 (stat)



state 220

    prim_list  ->  prim ',' prim_list .   (rule 92)

    $default	reduce using rule 92 (prim_list)



state 221

    clauses  ->  exp RETURNS stats .   (rule 117)
    clauses  ->  exp RETURNS stats . '|' clauses   (rule 118)
    clauses  ->  exp RETURNS stats . '|' ELSE RETURNS stats   (rule 119)

    '|' 	shift, and go to state 222

    $default	reduce using rule 117 (clauses)



state 222

    clauses  ->  exp RETURNS stats '|' . clauses   (rule 118)
    clauses  ->  exp RETURNS stats '|' . ELSE RETURNS stats   (rule 119)

    error	shift, and go to state 207
    ID  	shift, and go to state 12
    INT_LIT	shift, and go to state 13
    REAL_LIT	shift, and go to state 14
    BOOL_LIT	shift, and go to state 15
    STRING_LIT	shift, and go to state 16
    RECURSE	shift, and go to state 17
    ELSE	shift, and go to state 223
    NOT 	shift, and go to state 18
    '-' 	shift, and go to state 19
    '(' 	shift, and go to state 20

    exp 	go to state 208
    sexp	go to state 22
    clauses	go to state 224



state 223

    clauses  ->  exp RETURNS stats '|' ELSE . RETURNS stats   (rule 119)

    RETURNS	shift, and go to state 225



state 224

    clauses  ->  exp RETURNS stats '|' clauses .   (rule 118)

    $default	reduce using rule 118 (clauses)



state 225

    clauses  ->  exp RETURNS stats '|' ELSE RETURNS . stats   (rule 119)

    error	shift, and go to state 141
    ID  	shift, and go to state 142
    RETURN	shift, and go to state 143
    RECURSE	shift, and go to state 144
    BREAK	shift, and go to state 145
    SKIP	shift, and go to state 146
    RETRY	shift, and go to state 147
    COND	shift, and go to state 148
    WHILE	shift, and go to state 149
    '(' 	shift, and go to state 150
    '[' 	shift, and go to state 151

    ']' 	reduce using rule 97 (stats)

    decl	go to state 152
    ids 	go to state 153
    primary	go to state 154
    prim	go to state 155
    stats	go to state 226
    stat_list	go to state 157
    stat	go to state 158
    action	go to state 159



state 226

    clauses  ->  exp RETURNS stats '|' ELSE RETURNS stats .   (rule 119)

    $default	reduce using rule 119 (clauses)



state 227

    $   	go to state 228



state 228

    $   	go to state 229



state 229

    $default	accept
